Target:
4th day/30
----------
1)product building
2)java,springboot, hibernate normal job learning
3)applying remote job
4)ds & algorithms
5)Elm,Erlong, Elixir jobs remote
remoteok, workremotely,hasjob,indeed,naukri,angel.co
6)commit learning to github.com
gathering,tutorial,practicing
7)docker ruby on rails with git
git repo, secret with environment, dockerfile, run locally
8)kafka,couchdb, casandra
go,javaa
9)ruby on rails blog tutorial
10)blogbuiltwith(ror,go,python django,elixir,node.js)
11)elastic search
----------
learn one arabic word every day

1)Applying remote job
Erlong jobs
1)google search Erlong remote jobs
2)update resume in naukri, linkedin with 
Erlong, Elixir,Go
done in naukri
---
weworkremotely site
github jobs
---
https://jobmote.com/jobs/7471-senior-developer-ruby-rails-elm
Our code is a mixture of Ruby, Elm, Javascript, and a dash of Clojure. Additionally, we have a strong interest in functional programming languages like Haskell, OCaml, Elixir, and Idris. We're also using Rails, React, Postgresql, S3, Redis, Memcached, Docker, Nomad, Terraform, and more. While these are the tools we're currently using, you don't need to have previous experience with them. We know that good developers are capable of quickly picking up new languages and tools.

---
functional programming language
Haskell, OCaml, Elixir, Idris

other technologies
Nomad, Terraform, Cloure
---
https://jobs.github.com/positions/6bf2b51c-af87-11e7-8f77-fe95300449e5
http://careers.citrusbyte.com/apply/tPTZOv/Experienced-Backend-Engineer
---
write article on technology
---
Write some code, that will flatten an array of arbitrarily nested arrays of integers into a flat array of integers. e.g. [[1,2,[3]],4] -> [1,2,3,4]. 

Your solution should be a link to a gist on gist.github.com with your implementation.

When writing this code, you can use any language you're comfortable with. The code must be well tested and documented if necessary, and in general please treat the quality of the code as if it was ready to ship to production.

Try to avoid using language defined methods like Ruby's Array#flatten.
---
https://apidock.com/ruby/Array/flatten
---
run ruby online

http://rextester.com/l/ruby_online_compiler
https://repl.it/languages
http://rubyfiddle.com/
---
iterating ruby
--
https://code-maven.com/for-loop-in-ruby
ruby
names = ['Foo', 'Bar', 'Baz']
 
puts names
puts
 
 
names.each { |item|
    puts item
}
puts
 
names.each do |item|
    puts item
end
--
arry.kind_of?(Array)
arr.is_a?

---
https://ruby-doc.org/core-2.2.0/Array.html
---
applied hellosign
---
hacker in residence
startup studio
---
https://www.simplyhired.com/job/7TzKuWs3hWW5_KftQ6UzqFBychl0Zx0dQ-8OPxdpuHlNWwASAqM_hw
---
Telnyx
Elixir Engineer
Product Engineering
Chicago, IL, United States
About Telnyx
Telnyx is building the global telco of the future. We have deployed an international private software-defined network, with multiple tier-1 interconnects, leveraging all major cloud service providers to deliver a voice and messaging solution with carrier-grade reliability. We sell our services in a totally automated fashion, allowing our users to programmatically scale their voice and messaging on-demand.
In addition to providing service and software in major North American and European markets, we are expanding to Asia and are developing a wireless product that will provide licensed spectrum access to our infrastructure.
Telnyx has seventy employees (70% engineers) between our Chicago, IL office, Dublin, Ireland office and remote team. We have actual revenue traction, meaningful sequential monthly growth, and a massive addressable market.

Joining Our Team
At Telnyx, we’re working to globally democratize access to real-time communications over the internet. We’re building a future where voice, messaging, and wireless services can act as building blocks to facilitate high-fidelity, secure, and modern modes of communication.
No matter where you're based, or which team you work on, you’ll be part of a group of people working together to build solutions to mission-critical problems and a company that values the very best ideas. People rely on our products to communicate daily, which means they rely on us to build things with a high degree of resiliency and reliability.

The Role
As an Elixir Engineer at Telnyx, you will deploy groundbreaking applications to solve our customers’ hardest problems. Projects often start with a nebulous question and our Engineers lead the way in developing a solution, from high-level system design and prototyping to application development and data integration. As a Telnyx software engineer, you leverage everything around you: Telnyx products, open source technologies, and anything you and your team can build to drive real impact.
 
You work with users around the globe, where you help our customers by solving their communications challenges. Each mission presents different challenges, from the regulatory environment to the nature of the data to the user population. You will work to accommodate all aspects of an environment to drive real technical outcomes.

In this role, you will:
Build Elixir products for the delivery of mission-critical global communications. These products are latency sensitive and must handle data at scale, all while maintaining an intuitive user experience.
Create tools to automate critical aspects of production systems.

What we value:
Strong engineering background, preferred in fields such as Computer Science, Mathematics, Software Engineering, Physics.
3+ years of professional software development experience with either Ruby or a functional programming language (Clojure, Erlang, etc).
Demonstrated ability to continuously learn, work independently, and make decisions with minimal supervision. You understand that making mistakes means you’re learning, and you actively seek opportunities to grow and develop.
You want to work on software that is changing the world and you're passionate about creating intuitive, scalable products that magnify the analytical capabilities of our users. 
Experience building and operating scalable infrastructure software or distributed systems.
Experience with large-scale production databases and major cloud services.
Familiarity with micro-service architectures.
Highly proficient in a Linux environment. 
Experience with PostgreSQL.
Experience working with message queues (RabbitMQ).
Unit testing (we don’t do TDD, but we like coverage - a lot).

Technologies we use
A variety of languages including Python, Java, Elixir, Scala, Go, Angular, and React.
Open-source technologies like Cassandra, Spark, and ElasticSearch.
Industry-standard build tooling, including Docker, Consul, Jenkins, Ansible, and Github.

Our Guiding Principles
We wrote these principles to be actionable, to inform decision-making and to provide a sense of what’s important and what’s right. We live our values every day. They guide how we hire, train, measure and reward each other.

Stay gritty
Do more with less. We are creative problem solvers that always use constraints to our advantage.

Leverage the experience of others
Avoid unnecessary detours by learning from the mistakes and successes of others. Those who do not learn from history are destined to repeat it.

Improve continually
Perfection is the enemy of progress. Always ask “why.” Think big, start small, collect data, and iterate quickly.

Work together
Seek exponential gains in our work by improving the lives of colleagues and customers.

Practice diligence
Measure twice and cut once. Plan thoughtfully, always have someone double-check your work, and take deliberate action.

Spread integrity
Be transparent and honest. Give direct feedback.

Take action
Err on the side of action.No one is above any task; take ownership and get things done.

Think forward
Always think about what you can do today to put the company in the best position in the future.
Remind me to apply later
Apply to Job

First name 

Last name 

Email 

Phone number

Website

Resume
 attach  ATTACH
Cover letter
 attach  ATTACH
 
SUBMIT
Hire, a recruiting app for G Suite
Privacy policy
---
withgoogle
hire app
---
applying splunk senior software eng
https://www.simplyhired.com/job/Zbm2IHsPr9jsUnD16FhXURl5luZCnTEUgbjZh8fqEUOwo9-vcrw8Uw
http://jobs.jobvite.com/splunk/job/o8CO5fwn/apply
https://www.terakeet.com/careers/?p=job%2FoPU85fwG%2FapplyConfirmation&__jvst=Job%20Board&__jvsd=Indeed&nl=1
--

https://www.indeed.com/q-Elixir-or-Erlang-Developer-in-Remote-jobs.html

https://boards.greenhouse.getrake.io/digitaloceancitesremotes/jobs/857064?gh_jid=857064&gh_src=cs3mdi1#confirmation
---
lua, rust
Measurence
Actionable Analytics for the Physical World
penWrt Software Engineer €40k - €60k · 0.0 - 0.2%
Full Time · Remote OK · New York City · Software Engineer · Linux · Lua · Shell Scripting · GNU Make · rust · WiFi (802.11a/b/g/n/ac) and Bluetooth HW · OpenWrt · Mesh Network · Nim

---
Measurence
Actionable Analytics for the Physical World

To apply, email your LinkedIn Url (like: https://www.linkedin.com/in/ikbhal-basha-shaik-2684031b/) AND the link of this job (https://angel.co/measurence/jobs/81088-openwrt-software-engineer) to aprioni@measurence.com cc’ing recruiting-openwrt@measurence.com

--
angel.co
Maidsafe
Secure Access For Everyone

---

Apache Spark Platform Engineer $120k - $180k · 0.5 - 2.0%
Full Time · Remote OK · United States · Software Engineer · Lua · Apache Spark · Go · Apache Beam
Software Engineer £40k - £45k · No equity
Full Time · Remote OK · Troon · Backend Developer · C++ · Distributed Systems · Agile · Rust​ · P2P

---
learn arabic
https://www.youtube.com/watch?v=8ZIwInJfGEo&index=1&list=PL9BD7731DD2FCB7F4

play list
words, picture, voice
---
https://www.madinaharabic.com/vocabulary
https://in.pinterest.com/pin/864409722199294929/?autologin=true

mini picture dictionary
arabic worksheets
---
ruby on rails
blog docker
 capastrino,sempharecI/circleCI
 rspec

 postgres
 redis
 sidekiq

 unicorn
  development &production server
 ---
 earn money by writing tutorial on semaphore: 200$

https://semaphoreci.com/community/tutorials/dockerizing-a-ruby-on-rails-application

server: unicron, puma for ror
ruby version manager: rvm, churby

docker
 loads fast
 no disk space
 contains
   code
   runtime
   system libraries
 isolation
 	cgroups
 uses host kernel api
 ---
 benefits
 cross environment consistency
 expand development team painlessly
 use whatever technology fits best
 	experiments with new languages and framework
 build image once and deploy it many times

 ---
 rails
  4.2.5

 latest : rails 5
 --
 Generating a New Rails Application
We're going to generate a new Rails project without even needing Ruby installed on our work station. We can do this by using the official Rails Docker image.

docker version need>1.9.4
---
# OSX/Windows users will want to remove --­­user "$(id -­u):$(id -­g)"
docker run -it --rm --user "$(id -u):$(id -g)" \
  -v "$PWD":/usr/src/app -w /usr/src/app rails:4 rails new --skip-bundle dummy

# OSX/Windows users will want to remove --­­user "$(id -­u):$(id -­g)"
docker run -it --rm  \
  -v "$PWD":/usr/src/app -w /usr/src/app rails:4 rails new --skip-bundle dummy  

---
https://hub.docker.com/_/rails/
https://store.docker.com/images/ruby
---
Gemfile:

gem 'unicorn', '~> 4.9'
gem 'pg', '~> 0.18.3'
gem 'sidekiq', '~> 4.0.1'
gem 'redis-rails', '~> 4.0.0'
---
DRYing Out the Database Configuration

Change your config/database.yml to look like this:

---

development:
  url: <%= ENV['DATABASE_URL'].gsub('?', '_development?') %>

test:
  url: <%= ENV['DATABASE_URL'].gsub('?', '_test?') %>

staging:
  url: <%= ENV['DATABASE_URL'].gsub('?', '_staging?') %>

production:
  url: <%= ENV['DATABASE_URL'].gsub('?', '_production?') %>

---
DRYing Out the Secrets File

Change your config/secrets.yml to look like this:

---

development: &default
  secret_key_base: <%= ENV['SECRET_TOKEN'] %>

test:
  <<: *default

staging:
  <<: *default

production:
  <<: *default
  --
  Creating the Volumes

In the docker-compose.yml file, we're referencing volumes that do not exist. We can create them by running:

docker volume create --name drkiq-postgres
docker volume create --name drkiq-redis
---
Creating the Docker Compose Configuration File

Next, we will create the docker-compose.yml file and copy the following content into it:

postgres:
  image: postgres:9.4.5
  environment:
    POSTGRES_USER: drkiq
    POSTGRES_PASSWORD: yourpassword
  ports:
    - '5432:5432'
  volumes:
    - drkiq-postgres:/var/lib/postgresql/data

redis:
  image: redis:3.0.5
  ports:
    - '6379:6379'
  volumes:
    - drkiq-redis:/var/lib/redis/data

drkiq:
  build: .
  links:
    - postgres
    - redis
  volumes:
    - .:/drkiq
  ports:
    - '8000:8000'
  env_file:
    - .drkiq.env

sidekiq:
  build: .
  command: bundle exec sidekiq -C config/sidekiq.yml
  links:
    - postgres
    - redis
  volumes:
    - .:/drkiq
  env_file:
    - .drkiq.env    

---

docker volume create --name drkiq-postgres
docker volume create --name drkiq-redis
---
Running Everything

Now it's time to put everything together and start up our stack by running the following:

docker-compose up
---
# OSX/Windows users will want to remove --­­user "$(id -­u):$(id -­g)"
docker­-compose run --­­user "$(id ­-u):$(id -­g)" drkiq rake db:reset
docker­-compose run --­­user "$(id ­-u):$(id -­g)" drkiq rake db:migrate    


# OSX/Windows users will want to remove --­­user "$(id -­u):$(id -­g)"
docker­-compose run  drkiq rake db:reset
docker­-compose run  drkiq rake db:migrate
---
Running Everything, Round 2

Now that our database is initialized, try running the following:

docker-compose up

http://localhost:8000/

---
Right now the source code is on your work station, and that source code is being mounted into the Docker container in real time through a volume.

This means that if you were to edit a file, the changes would take effect instantly, but right now we have no routes or any CSS defined to test this.

Generating a Controller

Run the following command to generate a Pages controller with a home action:

# OSX/Windows users will want to remove --­­user "$(id -­u):$(id -­g)"
docker-­compose run --­­user "$(id -­u):$(id -­g)" drkiq rails g controller Pages home


Adding a New Job

Use the following to add a new job:

# OSX/Windows users will want to remove --­­user "$(id -­u):$(id -­g)"
docker-­compose run --­­user "$(id -­u):$(id -­g)" drkiq rails g job counter

Modifying the Counter Job

Next, replace the perform function to look like this:

def perform(*args)
  21 + 21
end

---
Modifying the Pages Controller

Replace the home action to look like this:

def home
  # We are executing the job on the spot rather than in the background to
  # exercise using Sidekiq in a trivial example.
  #
  # Consult with the Rails documentation to learn more about Active Job:
  # http://edgeguides.rubyonrails.org/active_job_basics.html
  @meaning_of_life = CounterJob.perform_now
end
---
Modifying the Home View

The next step is to replace the app/views/pages/home.html.erb file to look as follows:

<h1>The meaning of life is <%= @meaning_of_life %></h1>

---
Restart the Rails Application

You need to restart the Rails server to pickup new jobs, so hit CTRL+C to stop everything, and then run docker-compose up again.

If you reload the website you should see the changes we made.
---
Semaphore
You can easily set up continuous integration for your Docker projects on Semaphore.

First thing you'll need to do is sign up for a free Semaphore account. Then, you should add your Docker project repository. If your project has a Dockerfile or docker-compose.yml, Semaphore will automatically recommend the platform with Docker support.

Now you can run your images just as you would on your local machine, for example:

  docker build <your-project>
  docker run <your-project>
With your Docker container up and running, you can now run all kinds of tests against it. To learn more about using Docker on Semaphore, you can check out Semaphore's Docker documentation pages.


=-===
docker CI/CD

semaphore.ci
Start testing & deploying with Semaphore
Easy setup. Free for open source. 30-day free trial for private projects.


Pick a username

ikbhal
Your email address

iqbalforall@gmail.com
Create a password

••••••••••
 Create Free Account
or sign up with your GitHub account

Get Started with GitHub
✔Get up and running quickly with 100+ preinstalled tools
✔Run builds 59% - 101% faster than on other CI/CD services
✔Parallelize a large test suite down to minutes
✔Build and deploy microservices with native Docker CI/CD
✔Replace ad-hoc manual deployment with automated pipelines
✔Get quality support straight from our engineers
---
https://semaphoreci.com/docs/docker/setting-up-continuous-integration-for-docker-project.html

https://nickjanetakis.com/

---
Once you have chosen a platform, you can add your container registry host. Semaphore supports:

Docker Hub,
Amazon EC2 Container Registry (ECR),
Google Container Registry (GCR),
Quay.io,
Custom Container Registry.
---
If you don't already have a Semaphore account, sign up for a free account. The free account provides you with unlimited CI service for open-source projects and up to 100 private builds per month.

---
https://semaphoreci.com/product/docker
---
docker-cache
bundle exec inframan docker build
bundle exec inframan docker push
---
ecs deploy..

---
aws cluster
  service name

 ---
 play
 ---
 amazon ec2 container registry(ECR)
 google container registry(GCR)
 custom container registry
 Quay.io
 dockerhub

 ---
 docker run -it --rm  \
  -v "$PWD":/usr/src/app -w /usr/src/app rails:4 rails new --skip-bundle drkiq

 ---
 Get a 1G / 1CPU / 20G docker cluster from CloudHero | Secure Docker Container as a Service For Developers - CloudHero
 'http://cloudhero.io/'

 ---
 But if you combine AWS Free Tier with Docker Hosting – Run Docker Containers in any Cloud - Tutum (which is still free) you have a pretty scalable, fast and flexible solution.
 ---
 Cloudways is a managed cloud and container hosting provide for PHP based sites. Every server on Cloudways comes with ThunderStack(Nginx,Varnish,Apache,PHP-FPM) which helps you improve your site performance and decrease your site load time. Additionally they provide many features on 1-click. On Cloudways, you can enjoy 3 days of free Managed Container Hosting.
 ---
 Try Now - Realtime global deployments - about as simple as it gets. Docker or no docker, and free.

 Containerum offers a free docker cluster (256M RAM，300m CPU，1 TB Traffic，5 GB Volume) for 1 year. No Phone and Credit Card Verify.

Usage example:

https://shui.azurewebsites.net/2...
---
Arukas Docker Hosting Service
ARUKAS CLOUDis
DOCKER HOSTI
https://arukas.io/en/
beta not allwoing to signup
---
https://platform.cloudways.com/signup?utm_source=platform&utm_campaign=November16%20Optin&utm_medium=Signup
was not working
trail expire
---
no free docker hosting
---

$ docker run -it  --rm   -v "$PWD":/usr/src/app -w /usr/src/app rails:4 new --s
kip-bundle drkiq
D:\programfiles\Docker Toolbox\docker.exe: Error response from daemon: oci runti
me error: container_linux.go:295: starting container process caused "exec: \"new
\": executable file not found in $PATH".
time="2017-10-22T09:13:40+05:30" level=error msg="error waiting for container: c
ontext canceled"

---
Learning the Types of Docker Data Volumes
There are three main use cases for Docker data volumes:

To keep data around when a container is removed
To share data between the host filesystem and the Docker container
To share data with other Docker containers

---
ase is a little more advanced, so we won't go into it in this tutorial, but the first two are quite common.

In the first (and simplest) case you just want the data to hang around even if you remove the container, so it's often easiest to let Docker manage where the data gets stored.

Keeping Data Persistent
There's no way to directly create a "data volume" in Docker, so instead we create a data volume container with a volume attached to it. For any other containers that you then want to connect to this data volume container, use the Docker's --volumes-from option to grab the volume from this container and apply them to the current container. This is a bit unusual at first glance, so let's run through a quick example of how we could use this approach to make our byebye file stick around even if the container is removed.

First, create a new data volume container to store our volume:

docker create -v /tmp --name datacontainer ubuntu
This created a container named datacontainer based off of the ubuntu image and in the directory /tmp.

Now, if we run a new Ubuntu container with the --volumes-from flag and run bash again as we did earlier, anything we write to the /tmp directory will get saved to the /tmp volume of our datacontainer container.

First, start the ubuntu image:

docker run -t -i --volumes-from datacontainer ubuntu /bin/bash
The -t command line options calls a terminal from inside the container. The -i flag makes the connection interactive.

At the bash prompt for the ubuntu container, create a file in /tmp:

echo "I'm not going anywhere" > /tmp/hi
Go ahead and type exit to return to your host machine's shell. Now, run the same command again:

docker run -t -i --volumes-from datacontainer ubuntu /bin/bash
This time the hi file is already there:

cat /tmp/hi
---
https://boxboat.com/2016/06/18/docker-data-containers-and-named-volumes/

docker create -v /dbdata --name dbstore training/postgres /bin/true
docker run -d --volumes-from dbstore --name db1 training/postgres

docker volume create --name webapp
---
his is excellent functionality, but how do we take advantage of it? There are three ways to create volumes, with the last being the purpose of this post. We’ve created a short tutorial to show you docker volume create examples, and end with Docker named volumes.
1. Initialize (and mount) at run-time with the -v flag:

$ docker run -P --name web -v /webapp training/webapp python app.py
1
$ docker run -P --name web -v /webapp training/webapp python app.py
This will create a new volume inside a container at /webapp. Anything written to the /webapp directory will be persisted to the host machine, available to the next container that mounts it. But where is the actual volume stored? By using docker inspect, we can find where the it lives:

$ docker inspect -f {{.Mounts}} web
1
$ docker inspect -f {{.Mounts}} web
And you should see something like:

[{d87be9594b1ac6756c6069228e7b991deb1b8803a55dca23b0a3799c30dde05e /var/lib/docker/volumes/d87be9594b1ac6756c6069228e7b991deb1b8803a55dca23b0a3799c30dde05e/_data /webapp local  true }]
1
[{d87be9594b1ac6756c6069228e7b991deb1b8803a55dca23b0a3799c30dde05e /var/lib/docker/volumes/d87be9594b1ac6756c6069228e7b991deb1b8803a55dca23b0a3799c30dde05e/_data /webapp local  true }]
This “anonymous” volume was created at /var/lib/docker/volumes/d87…05e on my host machine. This isn’t exactly the most convenient for organization purposes…
2. Using the VOLUME instruction inside a Dockerfile:

FROM ubuntu:latest

VOLUME /webapp
1
2
3
FROM ubuntu:latest
 
VOLUME /webapp
This has the exact same effect as using the run flag above.
3. Create using the Docker Volume API introduced in Docker 1.9.

$ docker volume create --name webapp
1
$ docker volume create --name webapp
This created a volume that I got to name and didn’t have to attach to anything right away. Seeing the flexibility here? More on this below.
There are other options to mount volumes including specifying host paths to mount directly within a container. Read up on these to become familiar with what’s available.
---
https://docs.docker.com/engine/extend/plugins_volume/

=====
https://hovancik.net/blog/2017/07/02/creating-new-rails-and-vue-js-app-with-docker/

Creating new Rails and Vue.js app with Docker
=---
hovancik.net/blog/

Creating new Rails and Vue.js app with Docker

Posted under ruby rails docker vuejs on Jul 2 2017

·
The most of Rails and Docker tutorials either show how to dockerize your existing app, or how to create new Rails app by installing Rails locally and then adding Docker as second step.

It works but it have always struck me as weird idea: why installing Ruby first? Isn't the point of Docker, at least in part, that I do not need Ruby locally?

I am not that familiar with Docker so I decided to figure this out. Vue.js included, as it's something I want to try out and there's not a lot of stuff about it out there.

The result should be basic example of Vue.js and Rails app running inside Docker container. And for that, I'd like to use webpacker gem. One more thing: no CoffeeScript (which is default for Rails).

I recommend to familiarize yourself with Docker and webpacker, if not already. I am not gonna talk about them a lot.

No local Ruby and Rails

As it turns out, it's not that hard.

All I needed to do is go to the official Docker's Rails example. The document shows how to create new Rails app with PostgreSQL database without need to have Rails or Ruby installed on local machine.

Adding Vue.js to the mix changes steps a bit and that's what I will be writing about.

Docker container

To be able to create new app, we first need to prepare Docker container that can run rails new fancyapp --force --database=postgresql --webpack=vue --skip-coffee command. For that we need to have Rails so feel free to initialize your git repo and create basic Gemfile.

source 'https://rubygems.org'
ruby '2.4.1'
gem 'rails', '~> 5.1', '>= 5.1.1'
Gemfile.lock is empty at this point.

Now let's install other dependencies via Dockerfile.

FROM ruby:2.4.1

RUN apt-get update -qq && apt-get install -y build-essential libpq-dev

# Node.js
RUN curl -sL https://deb.nodesource.com/setup_7.x | bash - \
&& apt-get install -y nodejs

RUN apt-get update && apt-get install -y curl apt-transport-https wget && \
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list && \
apt-get update && apt-get install -y yarn

RUN mkdir /fancyapp
WORKDIR /fancyapp

ADD Gemfile /fancyapp/Gemfile
ADD Gemfile.lock /fancyapp/Gemfile.lock

RUN bundle install

ADD . /fancyapp
This is pretty straightforward: we install PostgreSQL lib, Node.js and yarn. Then we create directory for our fancy app and add Gemfile and Gemfile.lock there. Bundle will install Rails so we can use it to create new app.

Think about your app name here, and name the folder accordingly. Rails app will get name from it.

One last thing is docker-compose.yml. We will use docker-compose to run Docker commands.

version: '3'
services:
  db:
    image: postgres
  web:
    build: .
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    volumes:
      - .:/fancyapp
    ports:
      - "3000:3000"
    depends_on:
      - db
rails new fancyapp

Now that we are all ready, we need to call docker-compose build. Rails and all deps will get installed, so we can docker-compose run web rails new . --force --database=postgresql --webpack=vue --skip-coffee to create new app.

We do not set application name in rails new command, as we are calling it from inside our app directory. In our case the app will be called fancyapp.

The command mentioned will generate new app with example Vue.js code that we will use later. If you're running on Linux, the newly created files might be owned by root. To be able to work with them, run this:

sudo chown -R $USER:$USER .
Then every time when you create files with docker-compose run ..., do it again.

Do not forget to add ruby '2.4.1' to Gemfile again. It gets removed when using --force.

Now you can run docker-compose build again and docker-compose up. Your app is available at localhost:3000.

Adding Vue.js

The app running right now is ready to run Vue.js code, but our container is not. Let's change that.

To make things easier, we will add new service in our docker-compose running webpacker in development enviroment.

version: '3'
services:
  db:
    image: postgres
  webpacker:
    build: .
    command: bundle exec bin/webpack-dev-server
    volumes:
      - .:/fancyapp
    ports:
      - "8080:8080"
  web:
    build: .
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    volumes:
      - .:/fancyapp
    ports:
      - "3000:3000"
    depends_on:
      - db
      - webpacker
You might need to run docker-compose run web yarn install to get node packages installed. That's one part I haven't figured out yet.

All that is left now is adding some Vue.js code.

The easiest way is to add simple page via Rails generator: docker-compose run web bundle exec rails g controller home index. We will only change the Index view by adding example Vue.js code generated in the beginning via javascript_pack_tag that will execute code in app/javascript/packs/hello_vue.js.

<h1><%= javascript_pack_tag 'hello_vue' %></h1>
Go up with your container and you should see Hello Vue! in your browser.

Congratz, you have Rails with Vue.js app!

Debugging

If you run into any issue (eg. container wont start), it might be helpful to try to run commands not via docker-compose up, but via docker-compose run .... This way you may get better error output.

One might docker-compose run web bundle exec rails s -p 3000 -b '0.0.0.0' to check whether there is something wrong with Rails starting up.

I had to do that to figure out that pid file of my Rails app was not deleted when container went down.

Next steps

The rails new generated example Vue.js stuff for us, but that's just the start.

As I am not familiar with Vue.js, my next step is doing exactly that. Then I will need to learn more about webpacker. With that knowledge I hope to be able to fully use all the goods that this setup is giving me.

·
Did you enjoy this? Copy-paste the link from the address bar to your favourite social network to share. Subscribe here.

·

·
Jan Hovancik 2014+
software developer - guitar player - poetry lover

·https://hovancik.net/blog/2017/07/02/creating-new-rails-and-vue-js-app-with-docker/
---
http://blog.kontena.io/dockerizing-ruby-application/
---
MENU
Blog
Website
Kontena at Github
SUBSCRIBE
Blog LogoMENU
Dockerizing Ruby Application
08 JUNE 2016
Containers are great and they are gaining more popularity all the time. It’s replacing virtualization by removing hypervisor layer and allowing to run isolated container processes on the shared kernel instead (Image 1). The most important benefit of containers is a start time. While a full virtualized system usually takes minutes to start, containers take seconds, and sometimes even less than a second. With containers there is also a standard how to package application and deliver and deploy it.

Image 1: Moving from virtualization to containerization

Dockerfile
To start putting application into a Docker container, a Dockerfile is needed. It’s like a source code of the Docker image. In Dockerfile are defined all the steps that are required to execute to get application and it's environment up and running.

Docker Image
If Dockerfile is the source code then a Docker image is the compiled version of it. Actually it’s not a single image, but a set of image layers. Image layers are cached so not the whole Docker image is needed to update if Dockerfile will change. The later the change is in Dockerfile the less image layers are required to update.

Ruby Base Images
Every Docker image extends some base image. Typically, a base image contains OS and common libraries and packages. For Ruby developers there are official Ruby base images, that contain specific Ruby versions built-in. The official Ruby base images are:

ruby:version
ruby:onbuild
ruby:slim
ruby:alpine
ruby:version is the de-facto Ruby base image. In addition to Ruby, it contains a large number of extremely common Debian packages.

ruby:onbuild base image is perhaps the easiest one to start with. You need to just extend this image and you are ready to go. It wraps your application automatically into a Docker image on build time. However, it's not recommended for long-term usage within a project due to the lack of control.

ruby:slim is still Debian based but it only contains minimal packages to run Ruby. This is a good choice when you want to use Debian packages and define your environment by yourself.

ruby:alpine is based on Alpine Linux. It’s the smallest ruby base image, but the main caveat is that it does use musl libc instead of glibc and friends, so certain software might run into issues depending on the depth of their libc requirements

Debian based base images may be easier to start with but it comes with the cost of image size (Image 2). It is almost six times bigger than image based on Alpine Linux. Besides the size itself which are faster to transfer, smaller images also make your environment small and efficient. Small images all increase security as you reduce your security footprint size.

Image 2: Sizes of the Official Ruby Images

Of course one option is not to use any of official Ruby base images, but to use other base image instead and build the whole Ruby environment from scratch. Then you have a total control what libraries and packages you want to include in your Docker image.

Docker best practices
When running application in containers there are couple of rules of thumb to follow:

Run one process per container

Decoupling applications into multiple containers makes it much easier to scale horizontally and reuse containers. You can also define Docker to monitor running process of the container and when Docker recognizes the process exits it will restart it automatically

Use a .dockerignore file

To increase the build’s performance, you can exclude files and directories by adding a .dockerignore file to that directory as well. This file supports exclusion patterns similar to .gitignore files

Use Twelve-factor Apps paradigm

If you are running your application on Heroku you are used to use twelve-factor apps paradigm. Docker and containers supports natively this kind of paradigm so if you are not yet familiar with it, you can read more about on http://12factor.net/

Don’t rely on IP addresses

Docker will generate an IP address for each container. However, the IP address will change on every time container is re-created, so you can’t really rely on those addresses. Instead, you have to use some service discovery and DNS.

Example Application
Our example application is a simple Sinatra based application with MongoDB database. You can read all the source codes and Docker files from: https://github.com/kontena/todo-example.

Dockerfile

We will use Alpine Linux based Ruby base image. First, we are adding Gemfile and Gemfile.lock files to Docker image. After that we install Bundler and run bundle install. To reduce the size of the image we will remove build-time dependencies from the Docker image after dependencies are installed. Finally, we will add our application into Docker image and set some permissions and expose a port that the application will listen to. Based on that Docker can route a traffic correctly to container’s port.

FROM ruby:2.3.1-alpine  
ADD Gemfile /app/  
ADD Gemfile.lock /app/  
RUN apk --update add --virtual build-dependencies ruby-dev build-base && \  
    gem install bundler --no-ri --no-rdoc && \
    cd /app ; bundle install --without development test && \
    apk del build-dependencies
ADD . /app  
RUN chown -R nobody:nogroup /app  
USER nobody  
ENV RACK_ENV production  
EXPOSE 9292  
WORKDIR /app  
We can build the Docker image by executing docker build -t todoapp:latest .. This will generate Docker image from the Dockerfile found in the current directory and tag it as todoapp:latest.

Docker-Compose

We can run our application container from Docker image manually with docker run command. However, the better way is to run all application services with Docker Compose. Docker Compose is a tool for defining and running multi-container Docker applications. Application services and their configurations can be defined in docker-compose.yml file:

version: '2’  
services:  
  web:
    image: todoapp:latest
    command: bundle exec puma -p 9292 -e production
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/todo_production
    ports:
      - 9292:9292
    links:
      - mongodb:mongodb
  mongodb:
    image: mongo:3.2
    command: mongod --smallfiles
So, we are defining here one web service that is using our todoapp Docker image. Then we have a MongoDB service from mongo:3.2 image and it’s linked to our web application as mongodb alias.

We can deploy the whole application with docker-compose up command.

So, it’s relatively easy to Dockerize Ruby application and run it locally. When rolling to production things are not that simple anymore. There are couple of things to consider:

How big this app will be? How many users it will serve?
Do you want your application to be infrastructure agnostic or lean heavily on some cloud provider?
How to run databases or save other persistent data?
How to scale the application and handle load balancing?
How do you pass sensitive data to your application and where to store that data?
How the application can be deployed and updated with zero down-time?
You can solve all those things by yourself, but it would be a long and rocky road. Instead, you should choose a container platform that suites for your needs the best.

About Kontena
Kontena is a new open source Docker platform including orchestration, service discovery, overlay networking and all the tools required to run your containerized workloads. Kontena is built to maximize developer happiness. It works on any cloud, it's easy to setup and super simple to use. Give it a try! If you like it, please star it on Github and follow us on Twitter. We hope to see you again!

Image Credits: The Container Guide by Garry Ing

Lauri Nevala
Read more posts by this author.

Helsinki, Finland http://www.kontena.io
Share this post
  

When it comes to container platforms, there isn’t one to rule them all - and that’s OK
In the “Lord of the Rings” trilogy, there was one ring to rule them all. Fortunately, when it comes…
UpCloud & Kontena Partnering to Deliver High Performance Containers and Microservices Platform
We are excited to announce our partnership with UpCloud, the company providing the world's fastest cloud servers with SSD…
Kontena Blog © 2017Proudly published with Ghost
---
https://12factor.net/
---
booom bastard
lets try rspec now
---
https://relishapp.com/rspec/rspec-rails/docs/gettingstarted

Install Rails-3

$ gem install rails -v "~> 3.0.0"

Generate an app

$ rails new example
$ cd example

---
Add rspec-rails to the Gemfile

$ echo 'gem "rspec-rails", :group => [:development, :test]' >> Gemfile

Install the bundle

$ bundle install

Bootstrap RSpec

Generate a scaffold

$ rails generate scaffold Widget name:string
This generates files in the app and spec directories. The files in the
app directory are generated by Rails, and Rails delegates the generation of
the files in the spec directory to RSpec.

Run migrations

$ rake db:migrate && rake db:test:prepare


Run RSpec

$ rake spec

 rspec spec --format documentation

 f all went well, you should see output ending with:

29 examples, 0 failures, 2 pending
This output also includes the following controller spec:

WidgetsController
  GET index
    assigns all widgets as @widgets
  GET show
    assigns the requested widget as @widget
  GET new
    assigns a new widget as @widget
  GET edit
    assigns the requested widget as @widget
  POST create
    with valid params
      creates a new Widget
      assigns a newly created widget as @widget
      redirects to the created widget
    with invalid params
      assigns a newly created but unsaved widget as @widget
      re-renders the 'new' template
  PUT update
    with valid params
      updates the requested widget
      assigns the requested widget as @widget
      redirects to the widget
    with invalid params
      assigns the widget as @widget
      re-renders the 'edit' template
  DELETE destroy
    destroys the requested widget
    redirects to the widgets list

---
https://semaphoreci.com/community/tutorials/how-to-test-rails-models-with-rspec

bin/rails generate model Auction start_date:datetime end_date:datetime title:string description:text
rake db:migrate db:test:prepare

require 'rails_helper'

RSpec.describe Auction, :type => :model do
  it "is valid with valid attributes"
  it "is not valid without a title"
  it "is not valid without a description"
  it "is not valid without a start_date"
  it "is not valid without a end_date"
end

it "is not valid without a title" do
  auction = Auction.new(title: nil)
  expect(auction).to_not be_valid
end

class Auction < ActiveRecord::Base
  validates_presence_of :title
end


class Auction < ActiveRecord::Base
  has_one :buyer, class_name: "User"
  has_one :seller, class_name: "User"

  validates_presence_of :title, :description, :start_date, :end_date
end

describe "Associations" do
  it { should have_one(:buyer) }
  it { should have_one(:seller) }
end


RSpec.describe Bid, :type => :model do
  describe "Associations" do
    it { should belong_to(:bidder) }
    it { should belong_to(:auction) }
  end

  describe "Validations" do
    it { should validate_presence_of(:bidder) }
  end
end

class Bid < ApplicationRecord
  belongs_to :bidder, class_name: "User"

  validates_presence_of :bidder
end

# auction_spec.rb
describe "Associations" do
  it { should belong_to(:buyer) }
  it { should belong_to(:seller) }
  it { should have_many(:bids) }
end

class Auction < ActiveRecord::Base
  belongs_to :buyer, class_name: "User", optional: true # Rails 5!
  belongs_to :seller, class_name: "User"
  has_many :bids

  validates_presence_of :title, :description, :start_date, :end_date
end

https://www.codeschool.com/courses/testing-with-rspec    
rails generate rspec:install
---
using github repos as blog data
---
ruby on rails
mina
ruby mina, puma
---
http://nadarei.co/mina/
Really fast deployer and server automation tool
minimizes ssh connection overhead

config/deploy.rb

require 'mina/git'
require 'mina/bundler'

set :domain, 'your.server.com'
set :user, 'flipstack'
set :repository, 'flipstack'

task :deploy do
  deploy do
    # Preparations here
    invoke :'git:clone'
    invoke :'bundle:install'
  end
end

task :restart do
  queue 'sudo service restart apache'
end
----
http://puma.io/
built for speed and concurrency

gem "puma"

start puma
bundle exec puma

quickstart without bundler

gem install puma
puma

less memory usage

creator: Evan Pheonix
---
ruby on rails blog tutorial
---
real time applications

test example tutorial
todo, blog, forum, chat, hacker news clone

build clones with rails
trello clone, twitter clone, ecommerce website
slideshare clone, hulu clone, basecamp clone, github clone
urban dictionary, airbnb, drible clone, twitch clone
kickstarter clone, goodreads clone, couch surfing clone, fiverr clone

funny or die clone, genious.com annotaions clone
indiegogo clone, jobster clone(job search)
livingsocial clone, myfitnesspal clone, pixlr clone
scribd clone, square clone
themeforest, wehearit clone, zendesk clone(CRM)
reddit clone, youtube clone,pinterest clone, yelp clone
craiglist clone
---
build with ruby or ruby on rails
 - Twitter (in its early days) We're putting Twitter on our list as it was originally built with Ruby on Rails in 2006. ...
2 - Basecamp. I guess there's no need to introduce ;-)
3 - Yellow pages. ...
4 - Hulu. ...
5 - Slideshare. ...
6 - Github. ...
7 - Shopify. ...
8 - Groupon.

skillcrush.com
--
https://skillcrush.com/2015/02/02/37-rails-sites/
https://prograils.com/posts/top-10-famous-sites-built-with-ruby-on-rails
https://careerfoundry.com/en/blog/web-development/10-great-sites-built-with-ruby-on-rails/
https://codebrahma.com/top-sites-built-with-ruby-on-rails/
https://designwebkit.com/inspiration/40-websites-built-with-ruby-on-rails/

---
https://code4startup.com/projects/airalien-clone-airbnb-with-ruby-on-rails-bootstrap-jquery-and-paypal
https://www.onlinecoursereport.com/resources-and-tutorials-for-cloning-15-well-known-web-sites/
http://www.hongkiat.com/blog/crowdfunding-sites/
---
website clones irrespective of programming language, framework, database
clonescripts
clonescloud.com
hotscripts.com
agriya.com
https://www.softwaresuggest.com/clone-scripts
---
https://sitecloner.net/
--
frequently asked questions
---
http://www.hotscripts.com/category/scripts/php/scripts-programs/clone-scripts/
https://www.ncrypted.net/website-clone
--
upwork clone
--
bitcamp class

---
code4startup clone
tinder clone
producthunt clone
fiverr clone
ubereats clone
codeshare clone
---
ruby on rails + reactive native(android, ios)
---
what are you looking for so many clone paid courses
payments, dashboard..
---
but what you learn

---
groovy remote jobs
learn groovy, grails
---
Technology Stack Includes:
Grails
Groovy
YUI, HTML5, CSS3, Responsive design
MySQL, MongoDB
RabbitMQ

Desirable:
Cloud based deployments (AWS)
Understanding of insurance industry
Groovy and Grails experience
Team lead experience
Puppet
---
no jobs on remote atleast
---
what most technology, programming language for remote jbs
---
remotenation.io

---

Remote Work | Remote Jobs | Telecommuting - Remote Work | Remote Jobs | Telecommuting HOME WORKING REMOTELY HIRING INTERVIEW ADVICE GUIDES OFFICE ABOUT
HOME WORKING REMOTELY HIRING INTERVIEW ADVICE GUIDES OFFICE ABOUT
TwitterFacebook
ADVICE, GUIDES, PRODUCT MANAGERS, TOOLS
The Ultimate Guide to Project Management Software for Remote Teams.

 project_management_software
What is the best project management tool for businesses & remote teams? We get this question a lot, and it’s something that’s critical to all of our projects at FullStack. We’ve used a variety of tools over the years starting with our own home-grown application that we called “Workflo”. Eventually, we moved onto some open source tools like Trac and Redmine. We’re now running things on SaaS offerings because the quality of available tools has picked up significantly in recent years.

Each project we work on is completely different, but proper project management has certain fundamentals that need to be addressed, no matter what tool used.

For these reasons, we’ve decided to create a series of different categories (plus winners) allowing you to pick the best tool for your needs.
We’ve divided our review into the following categories: Large Projects, Small Projects, Free, Personal & Overall Winner.

***We know there’s many, many great project management services out there, but we just haven’t had the time to properly use them all.  If there’s something you think we HAVE to try, please write in the comments!

****

Pivotal Tracker
 

Pros
Points – Pivotal makes assigning points to stories very easy & gives project managers many different options to choose from for point systems. (Fibonacci, standard, etc)
Linking b/w Cards- Pivotal assigns id #’s to each card, making linking very easy b/w various cards.
Integrations – Pivotal integrates with almost every other service you might use in development (github, hipchat, slack,etc)
Multiple WorkSpaces – If your team is large and has multiple projects, the Multiple workspace features allows you to jump b/w the different ones.
Velocity + Volatility – Pivotal has many tracking features of points, allowing sophisticated teams to measure / optimize their workflow, identify bottlenecks, and work smarter.
UX / UI + Flow- We love Pivotal’s automatic movement of cards for sprints from “Backlogs” into “Current”, the limited options, and simplistic feel of it.
Reports: Pivotal gives users the ability to create burn down charts & other awesome projections easily and succinctly.
Negatives:
Cost- Pivotal charges per user, so for large teams- or for teams that need to have non-developers ‘monitor’ the progress, the price can get quite high quite quickly
Break in Period- There’s a break in period to get used to the flow & general look / feel of the board.  A full board can look quite intimidating at first glance
Creating Cards – Creating cards can take a long time since there’s so many fields.  Not a problem for important projects, but unneeded for simple or test projects
Small Cards – The actual size of the cards is small, which is not a problem for viewing the board, but is very annoying when creating the cards for the first time.  We really wish creating the cards happened in a larger box.
Overall:
We’re really big fans of Pivotal Tracker for project management, but the developers we work with also prefer it over other tools we’ve tried it in the past.  Pivotal has it’s share of weaknesses, and it isn’t the fastest tool to use, but large projects w/ a big scope generally won’t have cards that need to be re-written, or moved around quickly.  If your company or project is looking for something consistent and methodical so you can just focus on development, Pivotal should work great for you!

 

Jira
 

Pros:
Feature Rich – Jira & Jira Agile has a tool for almost any project you could possibly think of.
Well Known – Many people have used Jira at some point, so there’s not much of a break-in period.  At the very least, most people have used one of their other, non project management products.
Atlassian – Jira is apart of Atlassian, which is essentially a Salesforce for developers.  They have a different service for everything a team (large or small) of developers would ever need.
Flexible – So many features allows users to stick w/ Jira / Atlassian, and use different types of boards w/ different methodologies (Agile,Kanban,etc) without changing services.
Stable – We haven’t really noticed much downtime in any of the projects where we’ve used Jira.
Negatives:
Too Busy – The actual board itself is very busy w/ lots of features, which takes away focus quite easily.  While there are ways we can minimize this, we
Too many features– There are SO many features that it’s easy to get lost as you’re trying to create the perfect environment for your team and projects
Cost – Like Pivotal Tracker, it can get quite pricey quite fast.
Overall:
Overall, Jira is a solid option for many teams, but it’s hard to transition into after using other software.  Unfortunately, Jira is on the ‘More is better” side of the fence, and they have an overwhelming amount of features.  This produces the expected result of confusion, training manuals, and less focus on the core features from their internal team.  Hence, if you’re looking to switch and don’t see your company switching again for a long time, or already use another Atlassian product, then Jira will be a great fit.  Otherwise, we believe there are better options.

 

Basecamp
 

Positives:
Simple Interface – Basecamp has a very inviting look & feel to it,
Well Known – Basecamp has been around since the early 2000’s, which is quite a bit longer than the other services on this list.
Good for non-technical. – Basecamp can be great for those who are non-technical and need a project management tool for non ‘app’ related things
All-in-one features– Basecamp has chat, calendars, messages, etc.  It’s swiss-army knife, but doesn’t go crazy (like Jira)
Built by customers – 37Signals has always built their product w/ their community’s feedback, so basecamp could be the perfect solution for what your team needs.
Negatives:
Too Simple – For sophisticated & large development teams, Basecamp is simply not robust enough.  If your team has a dedicated project manager, scrum master, product manager, etc- there’s going to be a lot of things that the team will need to measure against, but Basecamp won’t be able to provide.
Tracking – Similar to above, Basecamp is light on the # of tracking and measuring tools.
Non-Professional– This is about ‘nit-picky’ as possible, but Basecamp’s warm and inviting interface might give some clients the wrong impression of it’s power.
Overall:
Basecamp is a great option for both small and large teams, and could be a perfect fit for agencies that don’t need to get too technical w/ their projects – designed focused firms for instance.  Either way, we definitely suggest Basecamp as an option for teams & projects leads to check out.

 

Trello
 

Positives:
So Simple! – Trello is so ridiculously simple to use it’s funny.  We’ve gotten so good at it that we can create an entire set of user stories + sprints for a large project in under an hour.
Well Known – Trello is becoming well known w/ non technical people, which can be great for input from clients.
Drag-Based Interface -Trello has a very simple point and drag interface, which also carries over to their free iOS and Android apps.
Communication It’s very easy to write messages & get team member’s attention through their @ feature + assigning cards to different people.
Shortcuts – Trello has some nifty shortcodes which allows power users to create cards extremely fast.
Cost – It’s free!  The premium & business tiers have a few more features, but it’s mostly organizational things.
Negatives:
Too Simple– Trello has many features that work for a variety of projects, but it starts to become too simple for teams larger than 5.
Tracking– Similarly to basecamp, Trello leaves a lot to be desired for teams that need to measure & optimize their output.  Trello wasn’t made for those types of projects, so it does prevent itself from reaching the entire PM market, but tha
Overall:
We love trello!  We’ve used it for managing projects, sales pipelines, content for our RemoteNation, around the house things, personal study projects, and even planning a bachelor party :).  They biggest downfall of trello (that it doesn’t have the sophisticated tools as Jira or Pivotal) is a blessing in disguise because they stay true to what the product is: a super simple and fast project management service!

 

Asana
 

Positives:
Well Funded – Asana has raised over $38 Million (we’re not sure how…) so it’ll be around and they’ll be able to keep innovating
Content Holder– Asana’s ‘project’ categorization style is great at holding large amounts of content for different projects
Works– We’ve never really noticed bugs, or really anything wrong w/ the actual functionality of asana.
Calendar– They have a great calendar which is good for collaboration.
TeamWork– Asana is built for teams, so teamwork is a huge part of its workflow.
Negatives:
Not Intuitive – Asana has never felt truly intuitive, and it took us awhile to get used to it.
Pricing- Asana has a free tier that will be enough for most users, but the premium features can get quite expensive even w/ a small # of users.
How it Works – Asana has invested quite a bit of time & money into their how it works videos, pictures and tutorials; proving that the app is not simple to use.
Overall:
Asana can be a perfect option, but it’d take a very specific project or team.  We assume that it’d be hard for most teams to switch to Asana if they’re already using something else; but, after looking at their portfolio we noticed most were startups so it was probably their first project management service.  Either way, solid tool that is something your team should try in some context.

 

Other Great Options (that we haven’t had the time to use)
Our #3 might be a head scratcher to some, but it all is based around our main criteria for greatness in this category, convenience & speed. We’ve decided to not select one application, but a few that are built into some very popular other services.

 

Clarizen – Clarizen’s execution platform gives your whole team a centralized environment to manage projects, tasks, resources, budgets, as well as associated emails, chat and documents.  However, we find it to be a bit clunky and non-intuitive.  It could probably use an entire UX facelift, but that would disrupt all of it’s current users
Podio – Podio  lets you get work done with your co-workers and clients on a social work platform that you make your own.  They claim to have over ½ million users, but we’re not sure if that’s accurate… The platform has a ton of features, and seems like a hybrid of Jira + Assana.
Wrike– is all-in-one project management software that helps remote and co-located teams get more things done together.  We like Wrike’s central focused layout (everything is in the center..) because it forces the user to focus on the task at hand.  This makes multi-tasking harder, but that’s exactly what they’re trying to prevent.
 

Best Project Management for Small Teams
 

1st Place: Trello
Trello is a perfect fit for small teams that do not need sophisticated tracking tools and metrics that pivotal or jira provide, but that doesn’t mean it isn’t powerful and perfect for small teams.  Trello shines in communication, UX, and their super simple interface which allows teams to jump into Trello immediately.  Also, we think features such as chat, calendars, and video conferencing are almost always better when you use a standalone app.

2nd Place: Basecamp
We considered many different options for our #2, but ultimately decided on Basecamp because it’s features are streamlined for small teams, and it can be used as an ‘all-in-one’ tool with its: chat, calendar, and many more features.  Finally, basecamp works really well for storing documents, so for a small team w/ a limited amount, it makes choosing Basecamp that much easier.

 

Best Project Management for Large Teams
 

1st Place: Pivotal Tracker
We use Pivotal for many of our large projects because it does exactly what we need, agile project management for large projects.  Pivotal is great when forming our sprints, release planning, and daily standups, but the ease of developer communication amongst cards & their integrations makes tracking progress easy for everyone involved.

2nd Place: Jira
We might get some pushback with choosing Pivotal Tracker over Jira for our #1, but we find Jira to have too many features ‘out of the box’.  Jira comes packed w/ many features that 99% of teams won’t end up using, but there’s a solid use case for everything included with Pivotal.  The price differences are nominal, & they have the same integrations, but we just ultimately find Jira to be too cluttered.

 

Best “Cost Sensitive” Options
We understand that startups, small businesses, and individuals typically like to save their resources (aka $$) for other essentials, when ‘free’ services are available. However, the services on the following list shouldn’t be looked at as inferior as to the other options. Rather, we think that the features list + the free aspects still make these excellent options for users in the need for video conferencing solutions.

 

Tie for 1st Place: Trello
Since trello is free and has all necessary functionality for teams, it’s an easy #1 for us.  While Trello does have a premium level, the only thing that’s really beneficial is the team organization, but that’s a ‘nice to have’ feature.  Further, there’s a “Scrum for Trello” for chrome (you can find by searching in the extensions) which allows teams to point their stories if they care to do so.

2nd Place: Basecamp
Basecamp came in as our 2nd choice because of their many features + their unique pricing setup, which could be a perfect fit for very large teams w/ a small # of projects.  Unlike almost every other service, Basecamp charges by the # of projects, NOT the # of users in a profile. Theoretically, a team of 50 could use Asana for $20 a month, VS $300 a month for Pivotal Tracker.

3rd Place: Asana
Asana has basic tier (up to 30 users) which is the only tier we’ve ever needed to use.  As we listed above, minus the quirks of Asana, they provide almost every tool a small or large project would need.  Certain things like giving points to stories for Agile teams is missing, but we’re sure you can mask this problem by creating your own system of labels in Asana.

 

*Bonus* Best PM Software for Personal Projects
Checklists and ‘to-do’ lists are quite common for a typical person, even if they’ve never touched a software project in their life.  These types of needs are quite different than one of a project manager for a lare software project with a large team, but that’s not to say the following are perfect to manage your life 🙂

1st Place: Trello
Trello wins again for its simplicity, ability to add photos, rapid creation of cards through shortcuts, and the intuitive UX/UI of the app.  As you can tell, we’re big proponents of trello, but for good reason, it has a ton of necessary features, but they don’t pile on the unnecessary like most of the other options on this guide.

2nd Place: Todoist
Todoist is a well known and powerful checklist creator built for a non-technical crowd.  Todoist has 100’s of use cases, but what it’s really great at is having a simple & clean user interface to get work done quickly in an organized manner.  Also, for power-users, Todoist has an easy folder system for categorizing larger projects or initiatives you might be working.  Finally, Todoist also has a nifty iOS and Android app, and more features on the way!

3rd Place: Checkli
Checkli is an even simpler form of Todoist, and places great emphasis on the task at hand.  Checkli has limited features, but is a great tool for creating simple daily to-do lists (grocery lists, chores, etc) but could also be used for larger personal initiatives.

 

Overall Winner: Trello!
We use Trello every single day for small, medium, large and personal projects.  It’s free, take < 2 minutes to create a workable board for a project w/ user stories + cards, and is simple enough for even the least tech-savvy client you’ve ever had 🙂  While some teams have to be able to measure and get reports on their progress each week, we feel as though this is still doable (not cleanly) through the “Agile for Trello” extension in the Chrome store + a few minutes of busy work on the PM.  Overall, there’s really not any core features missing from Trello (that can’t be found packaged in another tool we already use) so it was an easy choice for our team.

 

PLEASE LET US KNOW YOUR THOUGHTS!  THE PROJECT MANAGEMENT SOFTWARE INDUSTRY IS SUPER COMPETITIVE, SO WE KNOW THERE’S A FEW WE’VE LEFT OUT!
MAY 13, 2015BY REMOTENATION
FacebookTwitterPinterestGoogle +Stumbleupon
DEVELOPERS, GUIDES, WORKING REMOTELY
Top 5 Sites for Finding a Remote ASP.NET / C# / Microsoft Stack Job

 Remote_Microsoft_Stack_Jobs
After repeated requests from users on the site, we decided to make a job board post on .NET.  However, we soon realized that we should also cover C# to make it more well rounded (like our inclusion of Django for Python), essentially making this a “Microsoft Stack Job Board”

ASP.NET is developed by and runs on the Microsoft Windows operating system and has a set of 13 software packages and 7 different development models available to work with.  It’s an an open sourced, web and mobile app develop framework that isn’t regarded as a simple framework to get started with.

For the most part, the developers you’ll find w/ experience are less the ‘hacker’, but have a CS / Computer Engineering background.  Further, we find that most developers using these frameworks have about 5+ years of experience programming (if not more) so at the very least, employers won’t be dealing with rookie developers making careless mistakes.

#5. Indeed
Pros

Extremely Popular Job site (typically top ranking results for job searches)
OK filter (enter “Remote, Telecommute, OR anywhere ” in location OR Keyword search)
Decent number of opportunities
Good Mix of Startup + Corporate
Cons

Is just an aggregator, you will have to apply on employer’s site
Not Developer focused
Lots of ‘noise’ to go through, and filter’s don’t work too well
 

Overall

Indeed/ SimplyHired aggregates from a huge amount of job boards, so it initially seems as if they have the most opportunities. However, since they only aggregate, interested .NET job seekers will still have to apply on the listing companies site, which is a huge time waste if you’re applying to many opportunities. The search function only returns opportunities that have ‘remote’ (or similar) in their subject line, but this still returns a decent amount. Overall, Indeed & similar job sites are average at best for finding remote .NET jobs, but they have the potential to be a great resource if they add a “remote” search box

 

#4 Skip The Drive
Pros

Only Remote Opportunities, No need to filter jobs!
Mostly corporate or agency positions
Simple to navigate – Simple UX / UI
Cons

Limited opportunities + some opportunities are aggregated.
Only a few startup opportunities.
Average quality of opportunities (lower salary + perks than the other sites)
Overall

Skip the Drive had a surprising amount of opportunities (compared to other sites w/ .net), but it’s lacking any game-changing quality that would push it to the top 3 sites.  Skip the Drive had a good spread of opportunities, but we found the random opportunities that were aggregated a bit annoying amongst the other opportunities.  Either way, Skip the Drive is one to keep an eye on, but it’s currently not a ‘top’ site.

#3. FlexJobs
Pros

Most popular .NET / C# job board (FT, PT, & Contract)
Largest # of real opportunities (very low on recruiters)
Well known (good marketplace)
Mix of Corporate and Startup
Cons

Poor UI
Have to become a member to apply
COST (monthly fee to be a member)
Overall

At first, we didn’t think too much of flexjobs because the site looks a bit ‘spammy’ at first glance. However, they have a huge amount of C# / .NET Opportunities, more than all the other job boards. The one giant glaring weakness is that they charge job seekers a monthly subscription fee to apply to their positions. This allows them to have cheaper prices for employers to post opportunities, but is also quite annoying when nothing is guaranteed on the job seeker side. Nevertheless, if you’re really looking to get a new remote position, the monthly fee is nominal if you actually do apply to a ton of opportunities and use your payment to it’s full potential.:)

#2. Stack Overflow Careers
Pros:

Number of truly remote posts (approx 50+)
Quality of Employers: There’s some really solid employers posting great opportunities.
Quality of Applicants: Through our experience hiring, we consistently found awesome applicants through Stack Overflow
Application Management: Strictly for employers, but Stack Overflow has created a very simple way to manage applicants. Making it more likely that employers will stick with it.
Cons:

Price: $495 a post for employers, which limits the pool size.
Awareness: We think they could draw more attention to it for developers
Overall

We’ve posted to many different job boards to help clients fill technical positions, but have always gotten the best .NET applicants and the highest volume through Stack Overflow. On the job seeker side, we always find a solid number of opportunities, fast responses from the employers, with a great mix of startup and corporate positions.

Stack Overflow has positioned itself so well by creating two simple check boxes: one for employers, one for job seekers. In the job posting form (for employers) the following statement is below the ‘Telecommute’ checkbox–‘Check this only if you are considering candidates who will work entirely remotely’. Job seekers have the option to select ‘Allows remote’ in their locations 

#1 Dice.com
Pros

Largest # of FT opportunities
Well known in the Tech world
US & a large number of international opportunities
Good Filters
Cons

Some positions posted by recruiters (Cybercoders)
Need to go into “Advanced” filters to find remote filter.
Most positions require you to apply on company site (like Monster or CareerBuilder)
Overall

We were quite surprised by the # of great remote opportunities on Dice for .NET, but do know that it’s primarily used for a different audience than the Ruby / Startup type positions we post or look for ourselves.  One big weakness of Dice’s job seeker UX is that users need to go into advanced filters to check the ‘telecommute’ box, which we expect many users fail to do.  We’re not sure why this isn’t front & center on the location search (like Stackoverflow’s) but we’re sure they’ll add it at some time.  Finally, they could do a better job of finding startup opportunities, but we only know a handful of startups that use the Microsoft stack in the first place.

 

Summary
Dice.com out of nowhere for the win!  Dice is rarely a site we’d check for remote opportunities, but after a few conversations & research in the .NET community, we really didn’t think it was fair to put any other site as the top .Net job board. As mentioned above, we do highly suggest Dice moves their ‘telecommute’ checkbox to the first page, but that’s just preference.  For the others on the list, we didn’t find too many startup opportunities, but were pleasantly surprised by the decent # of choices on all the sites.  Overall, interested job seekers should check all the sites during their job search because we didn’t find too many similar choices amongst the sites.

FURTHER, WE FOUND CREATING THIS LIST HARDER THAN SOME OF THE OTHER LANGUAGES AND FRAMEWORKS FOR A VARIETY OF REASONS, NAMELY OUR LACK OF EXPERIENCE RECRUITING .NET / C# / MICROSOFT ENGINEERS.  MOST OF THE DEVELOPERS WE WORK WITH STARTED WITH .NET OR PHP & THEN MOVED INTO RAILS AFTER IT REALLY START TO GROW AROUND 2010.  FURTHER, WE HAVEN’T REALLY MET ANY DEVELOPERS THAT HAVE ‘TOYED AROUND WITH .NET’ OR ARE INTERESTED IN LEARNING THE FOUNDATIONS OF IT, AND WE DON’T GET ASKED TO DEVELOP APPLICATIONS IN IT.  HOWEVER, IT’S MORE SECURE THAN SOME OTHER FRAMEWORKS & IS QUITE ESTABLISHED, AND WE DON’T REALLY SEE AN END IN SIGHT FOR IT.  FOR THESE REASONS, WE EXPECT MORE DISAGREEMENT IN THE COMMENTS THAN FOR OUR OTHER JOB BOARDS, BUT WELCOME ALL HELP IN CREATING THE PERFECT LIST!
MAY 6, 2015BY REMOTENATION
FacebookTwitterPinterestGoogle +Stumbleupon
BLOG, INTERVIEW, WORKING REMOTELY
Taking a five person start-up to a 100 remote employee workforce: An interview with Paul Hartge, COO of RevolutionEHR

 Remote_working_Interview
Remote Nation had the chance to speak with Paul Hartge of RevolutionEHR, the COO of a completely remote software company that has grown from small, modest beginnings to a country-wide operation. They offer cloud-based electronic health records for optometrists while solely connecting to their customers and employees via phone, skype, and the internet.

RevolutionEHR is now home to over 100 employees and Paul gave us some insight on the challenges and benefits of being a growing remote business, what steps they currently take to stay connected with everyone in the company and why they decided to not get an office.

Let’s start with the basics, what is RevolutionEHR? When did you guys start?
We are a software company that provides electronic health records for optometrists. The company was founded in 2007.

Did you work remotely before RevolutionEHR or have you worked in an office? If so, what was change like?
My previous job was out of Toronto and I worked remotely for about five years prior to RevolutionEHR. Before that I worked in an office for nearly 20 years. Initially, the change required more rigid and careful planning for meetings since the impromptu office meeting was out of the question. I did find it easier to focus without all of the distractions that come with an office setting, though.

What were the reasons behind starting a company remotely? Any big factors or was it just a desired quality with you and the rest of the team?
Each of the founders was in a different city, so no one really wanted to make the bet on relocating. A lot of the work could be done independently among people as well. But mostly it was because all the founders were in different cities. And we didn’t have any money to fund an office.

Can you tell me about the process you and your team underwent from start-up to a now well established company and how being remote played into that process? Was it a challenge or a gift?
We have 100 employees now all working out of their houses, so there was a need for technology solutions once we got to ten or fifteen people.   We built a custom collaboration tool for posting information. It is an internal collaboration tool called “nerve center.” People can blog and communicate on it. It can be serious content or fun stuff. Everything from human resources to March Madness will be posted on it. It is sort of like a Facebook, but just for us.  It is definitely helpful for introducing new employees. Just an overall good way for people to stay connected.

As we got bigger and bigger we needed to plan more physical meetings, so depending on the groups, we schedule quarterly or annually meetings. We do an annual meeting once a year in January where everyone gets together to plan for the next year. It’s like a beginning of the year kick off. Other than that, smaller groups will meet a couple times a year. We probably have employees in 20 states or so it is hard to get everyone together in one place.

Down the line, it became apparent that we didn’t want to open an office, so when we hire new people there is the expectation that they are willing to always work remotely. So that may limit us to certain demographic, but we have the ability to pull from people across the whole country

Now that you guys are out of startup mode, what are your reasons for staying completely remote?
A couple things, one it would be hard to bring everything together since we are so spread out. And now it would be just kind of weird since we are so used to operating in a remote situation.

From a recruiting perspective, we can hire anyone from everywhere, which I think it is a huge staffing advantage. We hire support personnel from optometry offices to have that insight. To try and hire all those people in one area would be extremely difficult. To be able to hire across the country is a huge advantage.

With 100 employees it must be hard keeping in touch with everyone.  What are some strategies you use to keep in contact with everyone and manage them remotely?
The technology aspect is definitely important. Skype, google, Grasshopper, those are all important for keeping in touch with everyone. But just as important, we like to empower our workers to be self-motivated and self-managing. It allows for a nice distribution of work.

Any downsides with remote working that people should know if they are looking into remote work?
From an individual’s perspective, I always try to make sure that people are aware of the social aspect of it. There is a bit of isolation, physically. The social aspect is taken out of it. The communication is all done online. So people that go on lunch breaks or coffee breaks with you is taken out of the mix most of the time. You also have to prepare yourself from the distractions at home.  Working at home is not an alternative for the need for day care.

On an organizational level, the biggest difficulties, depending on the type of the business, is the perception that if you don’t have an office you aren’t a “real company.”  You have to keep in mind how you present yourselves to potential investors, clients and other companies so that you look like a real company and not a fake company! We do all of our customer selling and support online, so there is no reason for physical meetings. But if you need that physical aspect, the external image is important.

Any distractions at home?
Yeah, depending on your office environment there can be stuff that gets in the way. But it really comes down to how disciplined you are.

What are things that keep you focused?
I think the work itself keeps me focused. There are no real specific steps I take to make sure that I am focused. There is so much to do in a startup environment. I find it easier to focus when there aren’t people around. I just think of things that I need to do during the day and I just start cranking!

Any technology you use that you just can’t live without now?
We live and breathe in Skype all day long. We use GoToMeeting a lot. We use Salesforce extensively. We use Grasshopper too, which is a virtual phone system. But I am on Skype all day long. That is the one that I really couldn’t live without.

Do you like to listen to music at home when working?
Rarely, sometimes when I am doing really mundane work I will. But I am on the phone much of the day, so generally I don’t listen to music.

With so many people all working remotely, has there been any funny stories worth sharing?
There are the usual funny stories of people not realizing that the webcam is on and regretting that later. But there was a particular situation that caught us off guard.

One customer’s software implementation wasn’t going well. There were just issues with the setup. So the unhappy customer looked on our website and came across the address where our physical mail was going to at the time. Since we had no office, this address was one of the owner’s home addresses! The customer Google-Earthed the address to see where the company was “located” and they got a house with a big lawn and a swimming pool! So that did not go over well with. I highly recommend a P.O. Box for remote startups.

***

IF YOU’D LIKE TO LEARN MORE ABOUT REVOLUTIONEHR, BE SURE TO VISIT THEIR SITE @ HTTP://WWW.REVOLUTIONEHR.COM/
APRIL 29, 2015BY REMOTENATION
FacebookTwitterPinterestGoogle +Stumbleupon
DEVELOPERS, GUIDES, WORKING REMOTELY
Top 6 Sites for Finding a Remote Python Job

 Top_Remote_Python_Jobs
Python is a language that is easy to read, can be used in a wide variety of ways, is scalable, but for whatever reason is not routinely talked about as a ‘go-to’ language.  We have friends in the industry who use python as their main language for creating quick scripts for marketing or other simple tasks, but we’ve yet to hear someone say ‘Our back-end is written in Python”

Nevertheless, we had to do some major digging to find the best resources for remote python developers (check out this article in Hacker News about Python Jobs) but only found a handful of sites that seem worth it.  The following is what we found to be the top six sites for remote Python jobs.

#6. Linkedin
Pros

Well known: Almost everyone has a Linkedin professional requirement
Filter works in Keyword (will also have to try “telecommute”
Huge # of opportunities
Mostly Corporate jobs
Cons:

Not Developer focused (lots of clutter)
TOO MANY CHOICES, awful filters (we counted 8k)
Most of the positions are posted by recruiters (cybercoders specifically)
Overall:

We were surprised by the huge # of opportunities, but ultimately disappointed because 1/2’s of them were posted by CyberCoders (a tech consulting firm) & their truly awful filtering capabilities.

However, since Linkedin has become the dominant social network for careers (and most people having a Linkedin Profile) it’s one of the most populous job boards. The best benefit (if you have a filled out profile) is you can apply directly to positions using your linkedin profile, so no resume is needed. Going forward, if Linkedin was to add a “remote’ checkbox as a filter criteria, we might move Linkedin to #1 on our list

#5. Indeed / SimplyHired
Pros

Extremely Popular Job site (typically top ranking results for job searches)
OK filter (enter “Remote, Telecommute, OR anywhere ” in location OR Keyword search)
Decent number of opportunities
Good Mix of Startup + Corporate
Cons

Is just an aggregator, you will have to apply on employer’s site
Not Developer focused
Lots of ‘noise’ to go through, and filter’s don’t work too well
Overall

Indeed/ SimplyHired aggregates from a huge amount of job boards, so it initially seems as if they have the most opportunities. However, since they only aggregate, interested Python job seekers will still have to apply on the listing companies site, which is a huge time waste if you’re applying to many opportunities. The search function only returns opportunities that have ‘remote’ in their subject line, but this still returns a decent amount. Overall, Indeed & similar job are average at best for finding remote Python jobs, but they have the potential to be a great resource if they add a “remote” search box

#4 Skip The Drive
Pros

Only Remote Opportunities, No need to filter jobs!
Mostly corporate or agency positions
Simple to navigate – Simple UX / UI
Cons

Limited opportunities + some opportunities are aggregated.
Only a few startup opportunities.
Average quality of opportunities
Overall

Skip the Drive had a surprising amount of opportunities (compared to other sites w/ python), but it’s lacking any game-changing quality that would push it to the top 3 sites.  Skip the Drive is one to keep an eye on, but it’s currently not a ‘top’ site.

#3 DjangoGigs
Pros

Large # of Python opportunities
Well known in the Django world
US & a large number of international opportunities.
No Signup Necessary
Great Design
Cons

Django Focused Board (not just Python)
Overall

DjangoGigs is a great job board for Django (we really couldn’t find any strong negatives) but since our list is for Python, we didn’t feel as though it was proper to put it as our #1.  Either way, props to the team at Djangogigs, they know how to make a simple, intuitive job board!

#2. FlexJobs
Pros

Most popular Python job board (for all positions)
Largest # of real Python opportunities (very low on recruiters)
Well known (good marketplace)
Mix of Corporate and Startup
Cons

Poor UI
Have to become a member to apply
COST (monthly fee to be a member)
Overall

At first, we didn’t think too much of flexjobs because the site looks a bit ‘spammy’ at first glance. However, they have a huge amount of Python Opportunities, more than every other job board site yet. The one giant glaring weakness is that they charge job seekers a monthly subscription fee to apply to their positions. This allows them to have cheaper prices for employers to post opportunities, but is also quite annoying when nothing is guaranteed on the job seeker side. Nevertheless, if you’re really looking to get a new remote position, the monthly fee is nominal if you actually do apply to a ton of opportunities and use your payment to it’s full potential.:)

 

#1. Stack Overflow Careers
Pros:

Number of truly remote posts (approx.): High (49 Python)
Quality of Employers: There’s some really solid employers posting great opportunities.
Quality of Applicants: Through our experience hiring, we consistently found awesome applicants through Stack Overflow
Application Management: Strictly for employers, but Stack Overflow has created a very simple way to manage applicants. Making it more likely that employers will stick with it.
Cons:

Price: $495 a post for employers, which limits the pool size.
Awareness: We think they could draw more attention to it for developers
Overall

We’ve posted to many different job boards to help clients fill technical positions, but have always gotten the best Python applicants and the highest volume through Stack Overflow. On the job seeker side, we found a solid number of opportunities, and it was a great mix of startup and corporate positions.

Stack Overflow has positioned itself so well by creating two simple check boxes: one for employers, one for job seekers. In the job posting form (for employers) the following statement is below the ‘Telecommute’ checkbox–‘Check this only if you are considering candidates who will work entirely remotely’. Job seekers have the option to select ‘Allows remote’ in their locations

 

Summary
Similar to our Ruby Board, Stack Overflow won because of it’s superior interface, volume & quality of opportunities, and the popularity / trust of the site.  There isn’t that much buzz for Python these days, and most of the Python sites we reviewed had a design similar to what was commonplace for the internet in the mid 2000’s.  We’re not sure if these site owners just don’t want to reinvest in their sites because they know the language is losing popularity, or just plain laziness.

FURTHER, WE FOUND CREATING THIS LIST HARDER THAN SOME OF THE OTHER LANGUAGES AND FRAMEWORKS FOR A VARIETY OF REASONS, NAMELY OUR LACK OF EXPERIENCE RECRUITING PYTHON ENGINEERS.  OVER THE PAST FEW YEARS, WE ROUTINELY WORK WITH DEVELOPERS THAT “KNOW SOME PYTHON” & EITHER USED IT WHEN THEY WERE FIRST STARTING OUT, OR WORKED WITH IT SINCE IT WAS THE LEGACY CODE THEY INHERITED IN AN OLD POSITION. WE HAVEN’T MET ANY DEVELOPERS THAT HAVE ‘TOYED AROUND WITH PYTHON’ OR ARE INTERESTED IN LEARNING THE FOUNDATIONS OF IT, AND WE DON’T GET ASKED TO DEVELOP APPLICATIONS IN IT.  FOR THESE REASONS, WE EXPECT MORE DISAGREEMENT IN THE COMMENTS THAN FOR OUR OTHER JOB BOARDS, BUT WELCOME ALL HELP IN CREATING THE PERFECT LIST!
APRIL 27, 2015BY REMOTENATION
FacebookTwitterPinterestGoogle +Stumbleupon
ADVICE, OFFICE, WORKING REMOTELY
Can’t Focus while working from Home? Music might help…

 Music_Working_Remotely
Ever wonder what can help you ignore those pesky distractions and help you hunker down with your work at home? Well, research shows that putting on your trusty headphones might do the trick. While many of us need complete silence in order to work productively, putting on the right type of music may help you reach the finish line.

However, finding the “right type” of music can be tricky. There are different types of work out there, which call for different kinds of music. We explored a number of studies on the connections between work productivity and music. Throughout these studies, two distinct styles of work continued to pop up: tedious work and creative work. We summarized some important findings to help you reach that harmonious sweet spot between work and music.

Music for Tedious Tasks
Some work may not always call for significant brain power and it’s during these times when the music you love can come in handy.

In 2005, Teresa Lesiuk of University of Windsor released a study that focused on the effects of music on work productivity. Data was collected from 56 software designers who reported how music affected their work in their respective work environments during a five week period.

“Results indicated that state positive affect and quality-of-work were lowest with no music, while time-on-task was longest when music was removed. Narrative responses revealed the value of music listening for positive mood change and enhanced perception on design while working” said Lesiuk.

Her findings support that listening to music you like improves your mood and morale, which can increase your productivity. The music serves as a healthy distraction for when you are slogging through paperwork. So if you see your inbox is chalked full with new emails, by all means, crank it to 11.

Suggestions
Before you play your music of choice, make sure it is something that you already know. Listening to a new song, whether it is good or bad may distract you from completing your work. In other words, familiarity is the key here. If you are dying to listen to that new song by your favorite artist, use that desire as a reward and motivate yourself by listening to their earlier songs while working.

Music for Creativity
On the other end of the spectrum there’s creative work. Creative work requires a specific kind of music.  Clearly, you don’t want music that will be distracting to your creative process, but sound can still be a creative stimulus for your brain.  An effective medium between total silence and loud rhythmic music is soft, ambient music.

A study published in 2012 shows how ambient noise can help people with creativity. Through five experiments they observed the exact number of decibels when ambient noise and music can be beneficial to workers and their creativity.

The authors summarized, “Results from five experiments demonstrate that a moderate (70 dB) versus low (50 dB) level of ambient noise enhances performance on creative tasks and increases the buying likelihood of innovative products.”

The sounds arouse the brain, which leads to creativity. It acts as a constant stimulant for your brain, which then makes other noises, like your dishwasher, not as distracting. But, if the music or noise is too loud it can distract you, inhibiting the creative process.

The authors said “A high level of noise (85 dB), on the other hand, hurts creavity.”

Suggestions
So if you are trying to get some magic on paper, artists like Aphex Twin or Brian Eno can be of great service to help you focus. They both have albums with select “Ambient Works” on them, so they are safe bets. Or try listening to nature’s music or some white noise since these will provide the same effect. 

What to Avoid
Ever been really focused on a speaker then all of a sudden your attention drifts to the people behind talking about their weekend plans?   Imagine this scenario, but with John Lennon singing in your ear. We’ve looked at to how music can be helpful when working, but there are still times when music may not be so helpful, overall.

Generally, you should avoid music with lyrics if you are working on something that is demanding. Lyrics have the tendency to grab our attention and prevent us from fully focusing on the task at hand. A recent study done in 2012 looked at the effects of music with lyrics and without lyrics on 102 participants’ concentration. They found that music with lyrics negatively affected the participants’ concentration.

Additionally, music can also be a hindrance when trying to learn something new. There’s a reason why teachers don’t blast metal when trying to teach business calc. It has the same effect of multi-tasking. You cannot give 100 percent of your attention to one thing if you are also focused on something else.

Summary
If you find yourself not being able to focus for whatever reason, try listening to music and see what is best for you. But, keep in mind that some music can be more harmful than good.

Suggestions to keep in mind:

If you find yourself losing steam, try playing music that you think will help you get through your work. If you end up air playing air guitar, then you might want to find something else.

When trying to come up with ideas for your next project give ambient music or ambient sounds a try. Songza is a great site that provides a wide array of music and sounds based on the activities you’re doing, including streams like white noise and “In a Quiet Park.”

Try to avoid music with lyrics, since they prove to be distracting. Especially if something calls for your undivided attention.

AND IF YOU FIND THAT MUSIC IS JUST TOO DISTRACTING, THEN STICK WITH SILENCE SINCE THAT IS WHAT WORKS FOR YOU. IN THE END, IT’S ALL ABOUT WHAT HELPS YOU GET YOUR WORK DONE WELL AND EFFICIENTLY. 
APRIL 23, 2015BY REMOTENATION
FacebookTwitterPinterestGoogle +Stumbleupon
DEVELOPERS, GUIDES, HIRING, WORKING REMOTELY
Top 7 Sites for Finding a Remote PHP / Lamp Stack Job

 Top_PHP_Remote_Jobs
PHP is a language that is not as ‘sexy’ as it once was, and is definitely not the wave of the future.  However, php is the framework for many popular applications (Facebook, Yahoo, WordPress) and is one of the first languages that many developers learned.  Unlike Ruby on Rails, which preaches Convention over Configuration, many developers like the flexibility of writing PHP, but it’s also why many programmers think that even‘good’ php looks messy.

However, the PHP as a server side language isn’t going down easily.  Wordpress is positioning itself as the strongest CMS, and is built on PHP.  This means that unless something rapidly changes, there is still going to be an extremely large majority of the web written in this language for years to come.

Similar to our other job boards, many have pretty poor filters for truly 100% php remote jobs (without some crafty keyword searching) but we’ve done the majority of the heavy lifting for you 🙂  For these reasons and more, we find the following to be the Top 5 best sites for finding a remote php job.

#7. PHP Classes
Pros

Large # of PHP opportunities (avg. # on recruiters)
Well known in the PHP world (because of it’s classes & scripts)
Mix of Corporate and Startup
Fulltime + Contractual po
Cons

Poor UI
Opportunities list is cluttered: mix of corporate, startup, contract, and international opportunities
Have to become a member to apply
Overall

We have more experience with other languages and frameworks, so we had to do a bit of digging to find phpclasses. At first glance, it looked very promising, but we could eventually tell that (for whatever reason) there’s not as much time or attention given to the site as there was at some point.  The majority of the opportunities are international, and aren’t “premium”, leaving much to be desired for a great developer.  Essentially, if you’re looking for a high-end position w/ great pay, stock options, good perks, etc; then this isn’t the site for you.

#6. Indeed.com / SimplyHired.com
Pros

Extremely Popular Job site (typically top ranking results for job searches)
OK filter (enter “Remote, Telecommute, OR anywhere ” in location OR Keyword search)
Decent number of opportunities
Good Mix of Startup + Corporate
Cons

Is just an aggregator, you will have to apply on employer’s site
Not Developer focused
Lots of ‘noise’ to go through, and filter’s don’t work too well
Overall

Indeed / SimplyHired aggregates from a huge amount of job boards, so it initially seems as if they have the most opportunities. However, since they only aggregate, interested php job seekers will still have to apply on the listing companies site, which is a huge time waste if you’re applying to many opportunities. The search function only returns opportunities that have ‘remote’ in their subject line, but this still returns a decent amount. Overall, Indeed & similar job are average at best for finding remote php jobs, but they have the potential to be a great resource if they add a “remote” search box

#5. Authentic Jobs
Pros

Built for Remote & Contract type Jobs
Decent Mix of Startup & Corporate opportunities
Best Filter among all of the sites we’ve reviewed.
Good Design
Good Quality Positions
Cons:

Very few PHP positions (5)
No junior or entry level positions, only senior and experienced
Overall

This site has earned a reputation for the quality of its posts, and is well known amongst developers and designers. (i.e Employers can expect a decent # of applicants applying to their jobs) As with stackoverflow, there is a checkbox to tag the post as a telecommuting position, ‘Work can be done from anywhere (i.e. telecommuting)’. The other bonus here is filtering that allows you to separate out full-time jobs, contract, internship, etc. However, with all these great features, there’s still a limited # of php opportunities, but the process is great if interested in that list.

 

#4. WeWorkRemotely.com (37Signals)
Pros

Only Remote Opportunities, No need to filter jobs!
Well known for remote – 37Signals has written extensively on the topic
Many Startup opportunities
Simple to navigate – Simple UX / UI
Cons

Limited opportunities (we counted 8)
Too Simple for employer profiles: There’s limited space to describe the position.
Mostly Startup Opportunities: Lacking corporate jobs.
Overall

The posts are of good quality, but for a company that is such a large proponent of remote working, we think they should have more positions & better filter’s, but a 2.0 could be in the works.  WeWorkRemotely has a good mix of php + Lamp opportunities, which all seem to have great benefits.  Overall, solid site that should be every job seeker’s list.

 

#3. Linkedin
Pros

Well known: Almost everyone has a Linkedin professional requirement
Filter works in Keyword (will also have to try “telecommute”
Huge # of opportunities
Mostly Corporate jobs
Cons:

Not Developer focused (lots of clutter)
Too many choices, not good enough filters
Most of the positions are posted by recruiters.
Overall:

We were surprised by the huge # of opportunities, but ultimately disappointed because 1/2’s of them were posted by CyberCoders (a tech consulting firm). However, since Linkedin has become the dominant social network for careers (and most people having a Linkedin Profile) it’s one of the most populous job boards. The best benefit (if you have a filled out profile) is you can apply directly to positions using your linkedin profile, so no resume is needed. Going forward, if Linkedin was to add a “remote’ checkbox as a filter criteria, we might move Linkedin to #1 on our list

#2. FlexJobs
Pros

Most popular php job board (for all positions)
Largest # of real php opportunities (very low on recruiters)
Well known (good marketplace)
Mix of Corporate and Startup
Cons

Poor UI
Have to become a member to apply
COST (monthly fee to be a member)
Overall

At first, we didn’t think too much of flexjobs because the site looks a bit ‘spammy’ at first glance. However, they have a huge amount of php Opportunities, more than every other job board site yet. The one giant glaring weakness is that they charge job seekers a monthly subscription fee to apply to their positions. This allows them to have cheaper prices for employers to post opportunities, but is also quite annoying when nothing is guaranteed on the job seeker side. Nevertheless, if you’re really looking to get a new remote position, the monthly fee is nominal if you actually do apply to a ton of opportunities and use your payment to it’s full potential.:)

 

#1. Stack Overflow Careers
Pros:

Number of truly remote posts (approx.): Highest (62 total) (49 PHP)
Quality of Employers: There’s some really solid employers posting great opportunities.
Quality of Applicants: Through our experience hiring, we consistently found awesome applicants through Stack Overflow
Application Management: Strictly for employers, but Stack Overflow has created a very simple way to manage applicants. Making it more likely that employers will stick with it.
Cons:

Price: $495 a post for employers, which limits the pool size.
Awareness: We think they could draw more attention to it for developers
Overall

We’ve posted to many different job boards to help clients fill technical positions, but have always gotten the best php applicants and the highest volume through Stack Overflow. On the job seeker side, we found the highest number of opportunities, and it was a great mix of startup and corporate positions.

Stack Overflow has positioned itself so well by creating two simple check boxes: one for employers, one for job seekers. In the job posting form (for employers) the following statement is below the ‘Telecommute’ checkbox–‘Check this only if you are considering candidates who will work entirely remotely’. Job seekers have the option to select ‘Allows remote’ in their locations


Summary
Similar to our Ruby Board, Stack Overflow won because of it’s superior interfacet, volume & quality of opportunities, and the popularity / trust of the site.  There isn’t that much buzz for PHP these days, and most of the php sites we reviewed had a design similar to what was commonplace for the internet in the mid 2000’s.  We’re not sure if these site owners just don’t want to reinvest in their sites because they know the language is losing popularity, or just plain laziness.

Further, we found creating this list harder than some of the other languages and frameworks for a variety of reasons, namely our lack of experience recruiting PHP engineers.  Over the past few years, we routinely work with developers that “know some php” & either used it when they were first starting out, or worked with it since it was the legacy code they inherited in an old position. We haven’t met any developers that have ‘toyed around with PHP’ or are interested in learning the foundations of it, and we don’t get asked to develop applications in it.  For these reasons, we expect more disagreement in the comments than for our other job boards, but welcome all help in creating the perfect list!

 
APRIL 17, 2015BY REMOTENATION
FacebookTwitterPinterestGoogle +Stumbleupon
BLOG, GUIDES, TOOLS, WORKING REMOTELY
The Best Video Conferencing Solutions for Businesses and Remote Teams

 best_video_conferencing
What is the best video conferencing tool for business & remote teams? We get this question a lot, and it’s a tool we use for the majority of our day, everyday. For a long time, it was hard to find a good video conferencing tool that actually added value to the interactions of a remote team. Now there are finally a number of viable options serving different needs, so we’ve created a series of categories winners, allowing you to pick the best tool for your needs. To get the most out of your video conferencing solution, we recommend checking out our article on the best audio and video setup for remote teams.

We’ve divided our review into the following categories: Large Teams, Small Teams, Cost Sensitive, 1 on 1’s & overall winner.

Best Video Conferencing Tools for Large Teams
 

1st Place: Zoom.us
At FullStack, we typically have monthly release planning meetings with our biggest clients.  Our biggest client, Higher Learning Technologies, asked if their department heads could be on the call, in addition to the development team. We were already at about 9 people at that point without the other department’s, and the Google Hangout quality was not sufficient and had a hard limit of 10 participants. After extensive research, we found that Zoom.us was the best for large teams because of:

Positives:

Quality of the Audio – Light on the background noise, and very few problems throughout our many calls.
Quality of the Video – Consistent video
Chat functionality- an easy to use chat if you need to share links to drive folders or URLS
Recordable – Users are able to download the entire conference (with Audio + Video) for later reference or to share if people weren’t present.
Screen sharing – Zoom also allows users to share screens, great for large conference calls.
Up to 100 video people on a call
Negatives:

Cost. Zoom is relatively cheap if you use the service every day, or @ least on a consistent pattern, or if you’re not paying for it 🙂
2nd Place: Skype
In second place is Skype, but it seems as though Microsoft is making Skype a priority once again and the feature set & price is starting to improve. Most people in the US have a skype account (even if they barely use it) but it’s much more popular across the world. Skype was the first VOIP startup and defined the category, but has been pretty light on its extra features.

Positives:

Best Video & Sound Quality
Popular – Most people already have it installed on their computer, so there’s rarely a messy installation process.
Mobile – Skype has both iOS and Android apps, allowing you to continue (or begin) your call through your phone.
Price – Free!  Skype recently made their group calls free
Screen Sharing – Skype has the capability to share your calls w/ others.
Negatives:

App Based – Skype is a desktop application, so even though most people have it already installed, there’s some friction to getting a call started.
Limit on Group size – Like Hangouts, there’s a limit of 10 people per call.
Overall, Skype is an awesome option, but there were some things that are better suited for large teams / conferences with Zoom. Interestingly, Skype is creating a feature that ‘instant translates’ your language into another if you’re speaking w/ someone from a different country.  We can’t wait to use that!

3rd Place: Google Hangouts
Our 3rd place finisher, Google Hangouts, is also the most convenient. Google Hangouts has great audio & video, but is very inconsistent w/ quality. We’ve had calls that were flawless from start to finish, but also seem to be asking each other ‘Can you hear me” for a minute (of wasted time) at the start of about one third of our calls (Quick Tip = We find that taking your headset out & plugging it back in usually fixes this). Although Hangouts is more reliable when headsets aren’t used, audio quality suffers.

Hangouts does have many features, such as chat, sharing a screen & inviting people via a phone number.  There’s also some fun features that allow you to add faces and mustaches (for example) w/ their Draw feature.

Positives:

Web Based
Mobile App
Screen Share
Extra Features
Negatives:

Quality w/ Volume – The biggest flaw of Google Hangouts is that the quality of both the audio and video diminishes w/ the # of people on the call, and we routinely see people that drop off.
There’s a max of 10 people on a Group Video Call. 
Hence, the stability most of the time and the convenience factor (it’s a total web application, nothing needs to be installed) makes Hangouts our 3rd place.

 Honorable Mention: AnyMeeting
We recently tried AnyMeeting which has a lot of good features, but is ultimately lacking in elite quality of audio. Anymeeting has 2 options, free (ad-supported) and paid, but if you can put up w/ the ads, the free version should be all you need.

Positives:

Free – Ad supported version allows you to do almost everything you need.
Up to 200! users on a call
Features – ScreenSharing, chats, custom surveys, etc.
Negatives:

Quality – Not the best
Inverted camera – This is nitpicky, but all the other services use the same angle, and this really throws me off 😛
Overall, if AnyMeeting invested more into the sound quality and made the actual video screen sizes larger, this could compete w/ any of our Top 3.

Best Video Conferencing for Small Teams
 

1st Place: Google Hangouts
Hangouts is the winner because the primary negative isn’t a factor (audio & video quality diminishing w/  the # of people). The convenience factor of most people having Gmail, or having gmail as their work email, outweighs the quality of Skype. It’s very easy to schedule a calendar invite (through google calendar) and then use that link for everyone.

2nd Place: Skype
In a close second, Skype’s superior quality shines once again. We can safely assume that small teams have each other’s skype names, and can continue using their skype ‘group’ for calls & to hold all their chats. 

Overall, it’s hard for us to really recommend any other services simply because of the convenience, quality, features, and lack of negatives of Skype + Hangouts.

Best “Cost Sensitive” Video Conferencing Solutions
 

We understand that startups, small businesses, and individuals typically like to save their resources (aka $$) for other essentials, when ‘free’ services are available. However, the services on the following list shouldn’t be looked at as inferior as to the other options. Rather, we think that the features list + the free aspects still make these excellent options for users in the need for video conferencing solutions.

Tie for 1st Place: Skype
Skype is once again a winner because of it’s premier quality, popularity, and features.  For most situations, skype’s product suite is a perfect fit

Tie for 1st Place: AnyMeeting
AnyMeeting is a very close second to skype because it has almost every feature a user would need to host large scale conference calls (up to 200), have good quality team calls / chats or to share screens.  While the ads can be somewhat annoying after awhile, the ability to have 200 people for an unlimited time is an extremely great value and makes up for any shortcomings.

3rd Place: Google Hangouts
Hangouts is in 3rd place because the quality does not compete w/ Anymeeting, nor their features w/ AnyMeeting. The convenience of Hangouts is always a huge plus, but we can assume that those who are cost-sensitive don’t mind taking one extra step to get a feature they need or have a problem with ads.

Best Video Conferencing for “1 on 1” Meetings
1 on 1’s, or just quick chats between two people are definitely the most common type of video call or chat, but really come down to two things: convenience & speed. Sometimes a quick 5 minute call is infinitely better than a 20 minute email, but it’s obviously based on the situation.  For this review, we’ve assumed that the two users speak to each other frequently.

1st Place: Hangouts
This is the only category where we find that Hangouts is a clear #1 and shines above the rest.  Most of the quick 1on1’s we have are the result of a miscommunication through chatting, either on Slack or Hangouts, and it’s incredibly easy to stop chatting and just ask “hey, want to have a quick call to figure this out?”, & press the video call. However, one big drawback of Hangouts Calls is that all chats during the call are not saved. We’re not sure why this feature isn’t updated, but we’re sure google is on it 🙂

2nd Place: Skype
The consistently awesome Skype jumps into the #2 spot here, simply because our common chat situation which we explained in our Hangouts review.  However, if you typically have Skype open on your desktop, and don’t use hangouts, then we suggest Skype as your #1. 

3rd Place: Built-in Service
Our #3 might be a head scratcher to some, but it all is based around our main criteria for greatness in this category, convenience & speed. We’ve decided to not select one application, but a few that are built into some very popular other services.

Hipchat – If you only use Hipchat as your communication tool, then you’ll love how quickly you’ll be able to do a Hipchat Video.   The quality is average, but it’s acceptable for 10 minute calls and under.  The only drawback is that it’s only available w/ their premium package.
Facetime – We’ve only used Facetime a handful of times, mostly when one of our other tools aren’t working.  Facetime should be getting more popular since Apple has worked it into Yosemite (their new Operating System Version) and people are just getting the hang of it.  The biggest positive is that many people have Macbook’s for work (in the tech world) as well as an iphone.  However, the biggest drawback is that it’s not available for those without Apple products.
Slack– TBD – Slack recently acquired screenhero, which we’ve used a few times in the past.  We currently use Slack as our main chat application, and can safely assume that the integration w/  screenhero will make video calls seamless.  Slack might move up in the charts soon, but only time will tell!
Overall Winner 
Google Hangouts! There are many different use cases for having a video chat, but the convenience, cost, quality, and built-in functionality of Hangouts makes it the best overall choice for teams both big and small. We did consider Skype because of their superior quality for video and audio, but Skype didn’t have the overall feature set of Hangouts.

WE DO EXPECT THAT THIS LIST WILL CHANGE OVER TIME, SO PLEASE LET US KNOW WHAT YOU THINK OF OUR RANKINGS!
APRIL 13, 2015BY REMOTENATION
FacebookTwitterPinterestGoogle +Stumbleupon
ADVICE, BLOG, WORKING REMOTELY
Remote Working: On the Rise & Creating Happier Employees

 remote_working_happy_employees
A recent study by AccountTemps of 2,100 CFO’s across the US said 35% of their companies have increased remote work opportunities in the last three years, but only 3% have decreased the number of opportunities.

Employees like the flexibility of working remotely, but employers are also seeing a variety of benefits. The study revealed that the 35 % of the executives surveyed see higher employee morale and greater retention rates as the primary advantages of offering remote-work options, and 28 percent said the best aspect is an increase in productivity by eliminating commute time.

Other benefits employers cite include the ability to save money on office space and gaining access to a broader talent pool when hiring.

Bill Driscoll, a district president of Accountemps, recently said in a statement “Although telecommuting isn’t suitable for every role, it can be a powerful incentive for employees who want greater flexibility. It offers other advantages to businesses, such as greater productivity, cost savings on office space, the ability to tap into talent in different geographical areas and time zones, and more around-the-clock client service.”

Accountemps offered several tips for employers thinking about setting up a remote workforce:

Security:  Since Employees will be working from home, Employers need to make sure that all confidential and important documents and information is secure from the home office.  Each company will have their own requirements for this, but employers must create some security baseline.

Promote it!:  Working remotely is a HUGE plus for many employees, even if it’s just a day or two a week.  Companies need to promote their remote opportunities  (full remote or part-time) to increase the scope of their talent pool

Communication: Setting up proper communication channels is a must for remote workers.  There are plenty of video conferencing, business focused chat tools, + normal email & phone calls that allow this, but it’s something that needs to be normalized ASAP for new employees.

Guidelines: Employers must set guidelines on how employees must work from home.  This is highly dependent on the job, but could require the employee to track their time, to have a few calls w/ their manager, or whatever makes the most sense for their environment.

Expectations:  Employers need to clearly explain expectations for remote workers, so employees don’t view it as ‘day off’ from their normal schedule.  Ideally, since there’s much less of a commute time and less distraction, employees should exceed their normal work capacity on these days.  However, all this needs to be communicated to the employee.

Overall, we at Remote Nation see this as just another set of hard data that proves remote working is on the rise and provides tangible benefits to both employees and employers.

Please let us know what you think of this article in the comments!

 
APRIL 7, 2015BY REMOTENATION
FacebookTwitterPinterestGoogle +Stumbleupon
DESIGNERS, DEVELOPERS, GUIDES, WORKING REMOTELY
Top 7 Sites for Finding a Remote Ruby / Ruby on Rails Job

 Ruby_on_Rails_Remote
THERE ARE A LOT OF JOB SITES OUT THERE FOR RUBY DEVELOPERS, BUT ONLY A FEW OF THEM EVEN BOTHER TO IDENTIFY REMOTE / TELECOMMUTE JOBS. WITHIN THAT SMALL SET, FAR FEWER OF THEM ACTUALLY ALLOW YOU TO FILTER FOR TRULY 100% REMOTE JOBS WITHOUT SOME CRAFTY KEYWORD SEARCHING.

Ruby and the Rails framework have been consistently growing in popularity for almost a decade now. Rails is popular for its’ ability to let developers quickly create simple web applications, making it perfect for most startups. Also, Ruby’s easy to read syntax makes it popular among both beginners and advanced programmers for API’s & other web based applications. Typically, employers will look for Ruby programmers with a knowledge of HTML / CSS & Javascript, and experience with another server side language is taken as a big plus. Finally, we’ve seen a rise of employers requesting experience with mobile, usually writing API’s for native iOS & Android applications in Ruby.We expect that Ruby will continue to grow in popularity over the next few years, especially because of the ‘lean startup movement’. For these reasons and more, we find the following to be the Top 7 best sites for finding or posting a remote Ruby / Ruby on Rails job.
#7. Indeed
Pros
Extremely Popular Job site (typically top ranking results for job searches)
OK filter (enter “Remote” in location)
Decent number of opportunities
Good Mix of Startup + Corporate
Cons
Is just an aggregator, you will have to apply on employer’s site
Not Developer focused
Lots of ‘noise’ to go through, and filter’s don’t work too well
Overall
Indeed aggregates from a huge amount of job boards, so it initially seems as if they have the most opportunities. However, since they only aggregate, interested job seekers will still have to apply on the listing companies site, which is a huge time waste if you’re applying to many opportunities. The search function only returns opportunities that have ‘remote’ in their subject line, but this still returns a decent amount. Overall, Indeed & similar job are average at best for finding remote Ruby jobs, but they have the potential to be a great resource if they add a “remote” search box

#6. Github
Pros
Almost every developer uses Github as their code repository
“Remote” works in Location
Clean UI
Cons
Extremely limited ruby choices
Overall
We expected Github to have more listings because of the huge amount of developers that already use the site, but it was surprisingly low. We’ve posted opportunities ourselves, and didn’t think the applicants were as strong as some other sites, so maybe it’s just not a feature that’s marketed well on github. Either way, if they decide to make this more of a priority and developers take to it, this could be a powerhouse site.

#5. WeWorkRemotely.com (37Signals)
Pros
Only Remote Opportunities, No need to filter jobs!
Well known for remote – 37Signals has written extensively on the topic
Many Startup opportunities
Simple to navigate – Simple UX / UI
Cons
Should be more Ruby opportunities (for a site dedicated to it, by the guys who made Rails)
Too Simple for employer profiles: There’s limited space to describe the position.
Mostly Startup Opportunities: Lacking corporate jobs.
Overall
The posts are of good quality, but for a company that is such a large proponent of remote working, we think they should have more positions. Also, they have a ‘is this position not remote?’ flag, but they should manually be going through the job board each day.

#4. Authentic Jobs
Pros
Built for Remote & Contract type Jobs
Decent Mix of Startup & Corporate opportunities
Best Filter among all of the sites we’ve reviewed.
Good Design
Good Quality Positions
Cons:
Very few Ruby positions (3)
No junior or entry level positions, only senior and experienced
Overall
This site has earned a reputation for the quality of its posts, and is well known amongst developers and designers. (i.e Employers can expect a decent # of applicants applying to their jobs) As with stackoverflow, there is a checkbox to tag the post as a telecommuting position, ‘Work can be done from anywhere (i.e. telecommuting)’. The other bonus here is filtering that allows you to separate out full-time jobs, contract, internship, etc. However, with all these great features, there’s only a limited # of Ruby opportunities.

#3. Linkedin
Pros
Well known: Almost everyone has a Linkedin professional requirement
Easy to filter (enter “Remote” in location)
Huge # of opportunities
Mostly Corporate jobs
Cons:
Not Developer focused (lots of clutter)
Too many choices, not good enough filters
Most of the positions are posted by recruiters.
Overall:
We were surprised by the huge # of opportunities, but ultimately disappointed because 1/2’s of them were posted by CyberCoders (a tech consulting firm). However, since Linkedin has become the dominant social network for careers (and most people having a Linkedin Profile) it’s one of the most populous job boards. The best benefit (if you have a filled out profile) is you can apply directly to positions using your linkedin profile, so no resume is needed. Going forward, if Linkedin was to add a “remote’ checkbox as a filter criteria, we might move Linkedin to #1 on our list

#2. FlexJobs
Pros
Most popular Remote job board (for all positions)
Largest # of real ruby opportunities (very low on recruiters)
Well known (good marketplace)
Mix of Corporate and Startup
Cons
Poor UI
Have to become a member to apply
COST (monthly fee to be a member)
Overall
At first, we didn’t think too much of flexjobs because the site looks a bit ‘spammy’ at first glance. However, they have a huge amount of Ruby Opportunities, more than every other job board site yet. The one giant glaring weakness is that they charge job seekers a monthly subscription fee to apply to their positions. This allows them to have cheaper prices for employers to post opportunities, but is also quite annoying when nothing is guaranteed on the job seeker side. Nevertheless, if you’re really looking to get a new remote position, the monthly fee is nominal if you actually do apply to a ton of opportunities and use your payment to it’s full potential.:)

The Winner: #1. Stack Overflow Careers
Pros:
Number of remote posts (approx.): Highest (62)
Quality of Employers: There’s some really solid employers posting great opportunities.
Quality of Applicants: Through our experience hiring, we consistently found awesome applicants through Stack Overflow
Application Management: Strictly for employers, but Stack Overflow has created a very simple way to manage applicants. Making it more likely that employers will stick with it.
Cons:
Price: $495 a post for employers, which limits the pool size.
Awareness: We think they could draw more attention to it for developers
Overall
We’ve posted to many different job boards to help clients fill technical positions, but have always gotten the best Ruby applicants and the highest volume through Stack Overflow. On the job seeker side, we found the highest number of opportunities, and it was a great mix of startup and corporate positions.

Stack Overflow has positioned itself so well by creating two simple check boxes: one for employers, one for job seekers. In the job posting form (for employers) the following statement is below the ‘Telecommute’ checkbox–‘Check this only if you are considering candidates who will work entirely remotely’. Job seekers have the option to select ‘Allows remote’ in their locations

Summary
We’ve posted opportunities on many of these sites & other team members have used them in the past for new opportunities, but we were quite surprised by the results. A few “Ruby Only” job boards that we’ve used in the past either didn’t have remote opportunities, or only had a handful of actual positions. Further, some developer job boards we’ve used in the past (some very large ones..) simply had awful searches for remote ruby positions, but we assume this is a reflection of the market & the types of companies that post to those sites. Nevertheless, we expect this list to dynamically change over time, and we will update it to reflect these changes.

POST IN THE COMMENTS IF YOU THINK WE’RE MISSING ANY GREAT RESOURCES & WHY!
 
MARCH 29, 2015BY REMOTENATION
FacebookTwitterPinterestGoogle +Stumbleupon
ADVICE, BLOG
Office Free? How to go 100% Remote

 Office_Free_Team
WERE YOU EVER CURIOUS ON HOW YOU CAN TAKE YOUR OFFICE 100% REMOTE? NEIL PATEL HAS WRITTEN A GREAT ARTICLE ON THAT TOPIC AND HAS PRESENTED 6 QUICK TIPS ON HOW TO CREATE THIS PERFECT ENVIRONMENT.THE TREND OF WORKING REMOTELY IS GROWING, AND WE DON’T EXPECT IT TO STOP FOR A LONG TIME. THERE’S MANY WAYS TO CREATE A SUCCESSFUL REMOTE WORK ENVIRONMENT FOR BOTH YOURSELF AND YOUR TEAM, BUT NEIL PATEL, FOUNDER OF QUICKSPROUT, CRAZYEGG, & KISSMETRICS, RECENTLY WROTE A GREAT ARTICLE IN ENTREPRENEUR ON THE SUBJECT. BE SURE TO CHECK OUT WHO NEEDS AN OFFICE? HOW TO GO 100 PERCENT REMOTE AND READ ABOUT HIS 6 GREAT TIPS ON THE SUBJECT!

MARCH 25, 2015BY REMOTENATION
FacebookTwitterPinterestGoogle +Stumbleupon
123»
FEATURED POSTS
 The Ultimate Guide to Project Management Software for Remote Teams.
The Ultimate Guide to Project Management
 A Day in the Life of a Remote Developer
A Day in the Life of a Remote Developer
 A Day in the Life of a Remote Designer
A Day in the Life of a Remote Designer
 Working Remotely: Best Locations Away From the Home Office
Working Remotely: Best Locations Away Fr
 Working in the Remote Community : Meetups and Conferences
Working in the Remote Community : Meetup
CATEGORIES
Advice
Blog
Designers
Developers
Guides
Hiring
Interview
Office
Product Managers
Tools
Working Remotely
© 2015 copyright Remote Nation // All rights reserved
---
REQUIREMENTS

Minimum of 2+ years professional experience writing API services

Languages: Minimum 1-year writing Go (knowledge & interest in learning others a plus)

GraphQL, React knowledge

Comfortable working with go-kit, chi, or similar framework

Clear & constructive communication

PostgreSQL, DynamoDB, Memcached/Redis, CDNs

Familiarity with Nginx, HAProxy, Trafik a plus

Familiarity with Docker, Mesos, Kubernetes and similar a plus

Preferred: experience working with a distributed team

BENEFITS

https://www.dice.com/jobs/detail/Backend-Developer%2C-Backend-Engineer%2C-Infrastructure-Engineer%2C-Software-Engineer-Critical-River%2C-Inc.-Santa-Clara-CA-95050/90805586/188176?icid=sr4-1p&q=go&l=

---
go,graphql, react, go-kit, chi, postgresql, dynamodb, memcached/redis, nginx, haproxy, traif, docker
mesos, trafik

---
remote companies
dell, ibm, salesforce, sap, xerox, oracle, redhat, adobe, apple
--- 
permit to work in USA
---
 Real-Time Bidding Platform with 100k+ QPS
 ---
 https://stackoverflow.com/jobs/136890/senior-backend-engineer-java-scala-go-zalando-se?so=i&sec=False&pg=1&offset=1&r=True&v=True&tl=go

 Java, Scala, Python or Go
 ---
 zalando
, berlin

---
java, python, javascript, typescript, angular, node.js, postgresql, cassandra, influxdb, redis, elasticsearch, karma

--
The position will let you focus working on the our distributed server-side backend application, powering more than 1000 live & interactive conferences & events a year, running on the both cloud & on-premise installed servers. Key responsibilities include:

Scale the backend to 1M users per year
Implement automatic load balancing, fail-over & data geo-distribution in the global cloud platform achieving 99.9% global uptime
Develop the next level robust and performant code execution sandbox
Work in cross-team projects on new & improving existing features
Participate in brainstorming, specification and design sessions
Maintain documentation, samples & best practices up to the highest standards
For the position we are looking for:

Native JavaScript and Node.js speaker, experience in other server-side technologies is a plus
Proficiency in SQL & No-SQL databases, experience with CouchDB is a plus
Demonstrated success in designing and building complex, distributed and robust server-side application
Strong analytical, communication and collaboration skills
Proactive, independent, completes tasks down to resolution
https://stackoverflow.com/jobs/156312/software-engineer-backend-spotme?sec=False